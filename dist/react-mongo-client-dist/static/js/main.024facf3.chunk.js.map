{"version":3,"sources":["components/Login.js","components/Register.js","components/Fruit.js","components/Fruits.js","components/Lists.js","components/Result.js","components/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleLogin","loginLoading","loginFail","handleCloseLog","invalidEmail","handleCloseEmail","useState","emailInputLogin","setEmailInputLogin","passInputLogin","setPassInputLogin","showPass","setShowPass","className","onClick","type","placeholder","value","onChange","e","target","checked","id","htmlFor","to","pathname","Register","handleRegister","regLoading","regSuccess","handleCloseReg","invalidRegister","handleInvalidRegister","handleInvalidRegisterClose","emailInput","setEmailInput","passInput","setPassInput","nameInput","setNameInput","Fruit","fruits","item","Fruits","selectedFruit","setSelectedFruit","map","index","Lists","handleRemove","count","setCount","fruit","find","price","min","parseInt","handleCount","Result","results","userName","items","result","Shop","currentUser","setItems","newItems","filter","console","log","setResult","name","key","handleAdd","length","total","fetch","headers","method","body","JSON","stringify","then","res","json","data","insertedId","App","url","setFruits","loading","setLoading","setRegLoading","setRegSuccess","setInvalidRegister","setLoginFail","setLoginLoading","setInvalidEmail","setCurrentUser","getAllFruits","a","axios","get","response","useEffect","email","pass","validateEmail","post","handleFailedLogin","handleSuccessLogin","handleInvalidEmail","window","location","replace","test","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.024facf3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Login = ({\r\n  handleLogin,\r\n  loginLoading,\r\n  loginFail,\r\n  handleCloseLog,\r\n  invalidEmail,\r\n  handleCloseEmail,\r\n}) => {\r\n  const [emailInputLogin, setEmailInputLogin] = useState(\"\");\r\n  const [passInputLogin, setPassInputLogin] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {loginFail ? (\r\n        <div className=\"alert-box bg-light-red p-3\">\r\n          Login failed\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleCloseLog();\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {invalidEmail ? (\r\n        <div className=\"alert-box bg-light-red p-3\">\r\n          Invalid Email Address\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleCloseEmail();\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {loginLoading ? (\r\n        <div className=\"alert-box p-3 bg-primary text-white\">Logging in...</div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"\">\r\n        <h2>Login</h2>\r\n        <label className=\"h5\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Email\"\r\n          value={emailInputLogin}\r\n          onChange={(e) => {\r\n            setEmailInputLogin(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5\">Password</label>\r\n        <input\r\n          type={showPass ? \"text\" : \"password\"}\r\n          className=\"form-control\"\r\n          placeholder=\"Password\"\r\n          value={passInputLogin}\r\n          onChange={(e) => {\r\n            setPassInputLogin(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={showPass}\r\n          onChange={() => {\r\n            setShowPass(!showPass);\r\n          }}\r\n          id=\"passCheckBox\"\r\n        />\r\n        <label htmlFor=\"passCheckBox\">Show password</label>\r\n        <button\r\n          className=\"btn text-white login-register-button my-2 d-block w-100\"\r\n          onClick={(e) => {\r\n            handleLogin(emailInputLogin, passInputLogin);\r\n          }}\r\n        >\r\n          Login\r\n        </button>\r\n        <Link to={{ pathname: \"./register\" }} className=\"d-block\">\r\n          Don't have an account? Register here\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Register = ({\r\n  handleRegister,\r\n  regLoading,\r\n  regSuccess,\r\n  handleCloseReg,\r\n  handleInvalidRegister,\r\n  invalidRegister,\r\n  handleInvalidRegisterClose,\r\n}) => {\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passInput, setPassInput] = useState(\"\");\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {regLoading ? (\r\n        <div className=\"alert-box bg-primary p-3 text-white\">\r\n          Registering...\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {regSuccess ? (\r\n        <div className=\"alert-box bg-light-green p-3\">\r\n          Registration successful\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleCloseReg();\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {invalidRegister ? (\r\n        <div className=\"alert-box bg-light-red p-3\">\r\n          Invalid Email Address\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleInvalidRegisterClose();\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <h2>Register</h2>\r\n      <label className=\"h5 d-block\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Name\"\r\n        value={nameInput}\r\n        onChange={(e) => {\r\n          setNameInput(e.target.value);\r\n        }}\r\n      />\r\n      <label className=\"h5 mt-2\">Email</label>\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control\"\r\n        placeholder=\"Email\"\r\n        value={emailInput}\r\n        onChange={(e) => {\r\n          setEmailInput(e.target.value);\r\n        }}\r\n      />\r\n      <label className=\"h5 mt-2\">Password</label>\r\n      <input\r\n        type={showPass ? \"text\" : \"password\"}\r\n        className=\"form-control\"\r\n        placeholder=\"Password\"\r\n        value={passInput}\r\n        onChange={(e) => {\r\n          setPassInput(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        className=\"mt-2\"\r\n        type=\"checkbox\"\r\n        checked={showPass}\r\n        onChange={() => {\r\n          setShowPass(!showPass);\r\n        }}\r\n        id=\"passCheckBox\"\r\n      />\r\n      <label htmlFor=\"passCheckBox\">Show password</label>\r\n\r\n      <Link to={{ pathname: \"\" }}>\r\n        <button\r\n          className=\"btn text-white login-register-button my-2 d-block w-100\"\r\n          onClick={() => {\r\n            handleRegister(emailInput, passInput, nameInput);\r\n          }}\r\n        >\r\n          Register\r\n        </button>\r\n      </Link>\r\n      <Link to={{ pathname: \"/\" }}>Have an account? Login here</Link>\r\n      {/* <button\r\n        onClick={() => {\r\n          console.log(emailInput, passInput, nameInput);\r\n        }}\r\n      >\r\n        test\r\n      </button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Fruit = ({ fruits }) => {\r\n  return <option>{fruits.item}</option>;\r\n};\r\n\r\nexport default Fruit;\r\n","import Fruit from \"./Fruit\";\r\nconst Fruits = ({ fruits, selectedFruit, setSelectedFruit }) => {\r\n  return (\r\n    <>\r\n      <label className=\"h5\">Fruits</label>\r\n      <br></br>\r\n      <select\r\n        className=\"mx-2\"\r\n        value={selectedFruit}\r\n        onChange={(e) => {\r\n          setSelectedFruit(e.target.value);\r\n        }}\r\n      >\r\n        {fruits.map((fruits, index) => (\r\n          <Fruit key={index} fruits={fruits} />\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fruits;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nconst Lists = ({ item, handleRemove, index, fruits }) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const handleCount = (e) => {\r\n    setCount(parseInt(e.target.value));\r\n    fruit.count = parseInt(e.target.value);\r\n  };\r\n  let fruit = fruits.find((fruit) => fruit.item === item);\r\n\r\n  return (\r\n    <div className=\"p-2 my-2 dark-border row container text-center\">\r\n      <div className=\"col-3\">\r\n        {item}\r\n        <div className=\"\">Price: {fruit.price}</div>\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <input\r\n          min={0}\r\n          type=\"number\"\r\n          className=\"\"\r\n          value={count}\r\n          onChange={(e) => {\r\n            handleCount(e);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"col-3\">{fruit.price * count}</div>\r\n      <div className=\"col-3\">\r\n        <button onClick={() => handleRemove(index)}>remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from \"react\";\r\n\r\nconst Result = ({ results }) => {\r\n  return (\r\n    <div>\r\n      <h3>Transaction:</h3>\r\n      <h5>Name: {results.userName}</h5>\r\n      <ol>\r\n        {results !== null\r\n          ? results.items.map((result, index) => {\r\n              return <li key={index}>{result}</li>;\r\n            })\r\n          : \"\"}\r\n      </ol>\r\n      <h5>Total Price: {results.price}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import Fruits from \"./Fruits\";\r\nimport Lists from \"./Lists\";\r\nimport Result from \"./Result\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Shop = ({ currentUser, fruits }) => {\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n  const [selectedFruit, setSelectedFruit] = useState(\"apple\");\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const handleAdd = () => {\r\n    //checks if item is already added\r\n    for (var key in items) {\r\n      if (items[key] === selectedFruit) {\r\n        console.log(\"dupe\");\r\n        return;\r\n      } else {\r\n      }\r\n    }\r\n    setItems([...items, selectedFruit]);\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    const newItems = items.filter((item) => item !== items[index]);\r\n\r\n    console.log(fruits);\r\n    setItems(newItems);\r\n    console.log(result);\r\n  };\r\n\r\n  const calculateItems = () => {\r\n    let total = 0;\r\n    for (var key in fruits) {\r\n      total += fruits[key].price * fruits[key].count;\r\n      console.log(fruits[key].item, fruits[key].price, fruits[key].count);\r\n    }\r\n    // setTransaction([{ name: currentUser }, { items: items }, { total: total }]);\r\n\r\n    fetch(\"https://react-mongo-lloyd.herokuapp.com/api/transactions\", {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: currentUser.name,\r\n        items: items,\r\n        total: total,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        fetch(\r\n          \"https://react-mongo-lloyd.herokuapp.com/api/transactions/\" +\r\n            data[\"data\"].insertedId\r\n        )\r\n          .then((res) => res.json())\r\n          .then((data) => setResult(data[\"data\"]));\r\n      });\r\n  };\r\n\r\n  const [result, setResult] = useState(null);\r\n\r\n  return (\r\n    <div className=\"shop\">\r\n      <div className=\"h4 d-block\">Hello {currentUser.name}</div>\r\n      <Fruits\r\n        fruits={fruits}\r\n        selectedFruit={selectedFruit}\r\n        setSelectedFruit={setSelectedFruit}\r\n      />\r\n      <button onClick={() => handleAdd(selectedFruit)}>Add</button>\r\n      {items.length > 0 ? (\r\n        <div className=\"row text-center\">\r\n          <div className=\"col-3 h5\">Item</div>\r\n          <div className=\"col-3 h5\">Count</div>\r\n          <div className=\"col-3 h5\">Total Price</div>\r\n          <div className=\"col-3 h5\"></div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {items.map((item, index) => {\r\n        return (\r\n          <Lists\r\n            key={index}\r\n            item={item}\r\n            index={index}\r\n            handleRemove={handleRemove}\r\n            fruits={fruits}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {items.length > 0 ? <button onClick={calculateItems}>Buy</button> : \"\"}\r\n\r\n      <Link to={{ pathname: \"/\" }}>\r\n        <button>Logout</button>\r\n      </Link>\r\n      {result !== null ? <Result results={result} /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import axios from \"axios\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Shop from \"./components/Shop\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\n\n  const [fruits, setFruits] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [regLoading, setRegLoading] = useState(false);\n  const [regSuccess, setRegSuccess] = useState(false);\n  const [invalidRegister, setInvalidRegister] = useState(false);\n\n  const [loginFail, setLoginFail] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  const getAllFruits = async () => {\n    // Till the data is fetched using API\n    // the Loading page will show.\n    setLoading(true);\n\n    // Await will make it wait until that\n    // promise settles and return its result\n\n    const response = await axios.get(`${url}items`);\n\n    setFruits(response.data.data);\n    setLoading(false);\n  };\n\n  //runs on startup\n  useEffect(() => {\n    getAllFruits();\n  }, []);\n\n  const handleRegister = async (email, pass, name) => {\n    setRegSuccess(false);\n    setRegLoading(true);\n    if (validateEmail(email)) {\n      const response = await axios.post(`${url}users`, {\n        name: name,\n        pass: pass,\n        email: email,\n      });\n      setRegLoading(false);\n      setRegSuccess(true);\n      setInvalidRegister(false);\n      console.log(response.data);\n    } else handleInvalidRegister();\n  };\n\n  const handleCloseReg = () => {\n    setRegSuccess(false);\n  };\n  const handleInvalidRegister = () => {\n    setRegLoading(false);\n    setInvalidRegister(true);\n  };\n  const handleInvalidRegisterClose = () => {\n    setInvalidRegister(false);\n  };\n\n  const handleLogin = async (email, pass) => {\n    setLoginFail(false);\n    setLoginLoading(true);\n    if (validateEmail(email)) {\n      const response = await axios.post(`${url}users/login`, {\n        email: email,\n        pass: pass,\n      });\n      response.data.data === null\n        ? handleFailedLogin()\n        : handleSuccessLogin(response.data);\n    } else handleInvalidEmail();\n  };\n\n  const handleInvalidEmail = () => {\n    setLoginLoading(false);\n    setInvalidEmail(true);\n    setLoginFail(false);\n  };\n\n  const handleFailedLogin = () => {\n    console.log(\"no account found\");\n    setCurrentUser(null);\n    setLoginLoading(false);\n    setInvalidEmail(false);\n    setLoginFail(true);\n  };\n\n  const handleSuccessLogin = (data) => {\n    setLoginLoading(false);\n    setLoginFail(false);\n    setInvalidEmail(false);\n\n    setCurrentUser(data[\"data\"]);\n    window.location.replace(\"./#/shop\");\n  };\n\n  const handleCloseLog = () => {\n    setLoginFail(false);\n  };\n  const handleCloseEmail = () => {\n    //login function handling\n    setInvalidEmail(false);\n  };\n\n  const validateEmail = (email) => {\n    let re =\n      /[a-zA-Z0-9!@#$%&'*+'-=]+@[a-zA-Z0-9!@#$%&'*+'-=]+\\.[a-zA-Z0-9!@#$%&'*+'-=]+/;\n    return re.test(email);\n  };\n  return (\n    <Router>\n      <div className=\"container-sm w-50 my-2 p-3 dark-border\">\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <Login\n                  handleLogin={handleLogin}\n                  setRegSuccess={setRegSuccess}\n                  loginLoading={loginLoading}\n                  loginFail={loginFail}\n                  invalidEmail={invalidEmail}\n                  handleCloseLog={handleCloseLog}\n                  handleCloseEmail={handleCloseEmail}\n                />\n              }\n            />\n            <Route\n              path=\"/register\"\n              element={\n                <Register\n                  handleRegister={handleRegister}\n                  regLoading={regLoading}\n                  handleCloseReg={handleCloseReg}\n                  regSuccess={regSuccess}\n                  handleInvalidRegister={handleInvalidRegister}\n                  invalidRegister={invalidRegister}\n                  handleInvalidRegisterClose={handleInvalidRegisterClose}\n                />\n              }\n            />\n            <Route\n              path=\"/shop\"\n              element={<Shop currentUser={currentUser} fruits={fruits} />}\n            />\n          </Routes>\n        )}\n\n        {/* <button onClick={() => window.location.replace(\"./#/shop\")}>\n          go to shop test\n        </button> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}