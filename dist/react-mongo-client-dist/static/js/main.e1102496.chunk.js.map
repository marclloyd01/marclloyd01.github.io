{"version":3,"sources":["components/Login.js","components/Register.js","components/Counter.js","components/RowFruits.js","components/TransactionRow.js","components/Transaction.js","components/BillModal.js","components/Shop.js","components/NavBar.js","components/Home.js","components/ForgotPassword.js","components/ResetPassword.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleLogin","loginLoading","loginFail","invalidEmail","accountNotExists","setAccountNotExists","setLoginFail","setInvalidEmail","setFieldsEmpty","showloginButton","clientId","onLoginSuccess","onLoginFailure","useState","emailInputLogin","setEmailInputLogin","passInputLogin","setPassInputLogin","showPass","setShowPass","Box","className","Alert","severity","onClose","Input","fullWidth","placeholder","value","onChange","e","target","type","endAdornment","InputAdornment","position","onClick","IconButton","to","pathname","Button","variant","onSuccess","onFailure","cookiePolicy","Register","handleRegister","regLoading","invalidRegister","setInvalidRegister","passwordMismatch","setPasswordMismatch","emailExists","setEmailExists","nameInput","setNameInput","emailInput","setEmailInput","passInput","setPassInput","passConfirmInput","setPassConfirmInput","age","setAge","gender","setGender","style","paddingRight","Select","MenuItem","inputProps","min","max","Counter","handleChangeCount","fruitCount","transactionState","FormControl","TextField","InputProps","disabled","size","label","id","isNaN","parseInt","RowFruits","fruitItem","fruitPrice","handleRemove","handleCount","fruitTotal","count","setCount","ListItem","divider","secondaryAction","number","TransactionRow","item","price","totalPrice","Transaction","data","showTransaction","handleBuy","name","List","items","length","map","index","total","BillModal","handleCloseModal","userName","_id","finalBill","Shop","currentUser","fruits","setFruits","sessionFruits","selectedFruit","setSelectedFruit","cartFruits","setCartFruits","alertState","setAlertState","loading","showLoading","transactionItems","setTransactionItems","serverTransaction","setServerTransaction","url","fruitRemove","backFruit","filter","fruit","filteredFruit","itemObject","mappedFruits","a","setModalOpen","axios","post","userId","result","insertedId","get","transaction","modalOpen","shopLoading","setShopLoading","getAllFruits","response","useEffect","CircularProgress","Modal","open","sx","width","top","left","transform","bgcolor","boxShadow","padding","InputLabel","labelId","select","find","filterItem","handleAddFruit","key","tempTransaction","handleConfirm","NavBar","showlogoutButton","onSignoutSuccess","handleLogout","buttonText","onLogoutSuccess","Home","transactionList","setTransactionList","homeLoading","setHomeLoading","getList","list","ForgotPassword","email","setEmail","setLoading","state","error","showError","success","showSuccess","sendEmail","preventDefault","token","emailjs","send","user_email","link","then","message","onSubmit","htmlFor","FormHelperText","ResetPassword","useSearchParams","searchParams","allowed","setAllowed","setName","setToken","currentEmail","setCurrentEmail","getAuth","headers","Authorization","authorization","confirmNewPassword","newPassword","acknowledged","App","setRegLoading","regSuccess","setRegSuccess","justRegistered","setJustRegistered","fieldsEmpty","setLoginLoading","isLoggedIn","setIsLoggedIn","setCurrentUser","pass","validateEmail","info","status","test","setShowloginButton","setShowlogoutButton","res","console","log","profileObj","existingEmail","givenName","window","location","alert","clear","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1102496.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst Login = ({\r\n  handleLogin,\r\n  loginLoading,\r\n  loginFail,\r\n  invalidEmail,\r\n  accountNotExists,\r\n  setAccountNotExists,\r\n  setLoginFail,\r\n  setInvalidEmail,\r\n  setFieldsEmpty,\r\n  showloginButton,\r\n  clientId,\r\n  onLoginSuccess,\r\n  onLoginFailure,\r\n}) => {\r\n  const [emailInputLogin, setEmailInputLogin] = useState(\"\");\r\n  const [passInputLogin, setPassInputLogin] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <Box className=\"\">\r\n      {accountNotExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setAccountNotExists(false);\r\n          }}\r\n        >\r\n          Account does not exist\r\n        </Alert>\r\n      )}\r\n      {loginFail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setLoginFail(false);\r\n          }}\r\n        >\r\n          Login failed\r\n        </Alert>\r\n      )}\r\n      {invalidEmail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidEmail(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      {loginLoading && <Alert severity=\"info\">Logging in...</Alert>}\r\n      <form>\r\n        <h2>Login</h2>\r\n        <label className=\"h5\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Email\"\r\n          value={emailInputLogin}\r\n          onChange={(e) => {\r\n            setEmailInputLogin(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInputLogin}\r\n          onChange={(e) => {\r\n            setPassInputLogin(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Link\r\n          to={{ pathname: \"/forgot-password\" }}\r\n          onClick={() => {\r\n            setFieldsEmpty();\r\n          }}\r\n        >\r\n          Forgot password?\r\n        </Link>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          className=\"my-3\"\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleLogin(emailInputLogin, passInputLogin, e);\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Box className=\"d-flex justify-content-between\">\r\n          <Link\r\n            to={{ pathname: \"/register\" }}\r\n            onClick={() => {\r\n              setFieldsEmpty();\r\n            }}\r\n          >\r\n            Don't have an account? Register here\r\n          </Link>\r\n\r\n          {showloginButton ? (\r\n            <GoogleLogin\r\n              clientId={clientId}\r\n              onSuccess={onLoginSuccess}\r\n              onFailure={onLoginFailure}\r\n              cookiePolicy={\"single_host_origin\"}\r\n              // isSignedIn={true}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { MenuItem, Select } from \"@mui/material\";\r\n\r\nconst Register = ({\r\n  handleRegister,\r\n  regLoading,\r\n  invalidRegister,\r\n  setInvalidRegister,\r\n  passwordMismatch,\r\n  setPasswordMismatch,\r\n  emailExists,\r\n  setEmailExists,\r\n  setFieldsEmpty,\r\n  nameInput,\r\n  setNameInput,\r\n  emailInput,\r\n  setEmailInput,\r\n  passInput,\r\n  setPassInput,\r\n  passConfirmInput,\r\n  setPassConfirmInput,\r\n  age,\r\n  setAge,\r\n  gender,\r\n  setGender,\r\n}) => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {passwordMismatch && (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"my-3\"\r\n          onClose={() => {\r\n            setPasswordMismatch(false);\r\n          }}\r\n        >\r\n          Passwords do not match\r\n        </Alert>\r\n      )}\r\n      {emailExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setEmailExists(false);\r\n          }}\r\n        >\r\n          Email already exists{\" \"}\r\n        </Alert>\r\n      )}\r\n      {regLoading && <Alert severity=\"info\"> Registering... </Alert>}\r\n      {invalidRegister && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidRegister(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      <h2>Register</h2>\r\n      <form>\r\n        <label className=\"h5 d-block\">Name</label>\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Name\"\r\n          value={nameInput}\r\n          onChange={(e) => {\r\n            setNameInput(e.target.value);\r\n          }}\r\n        />\r\n        <div className=\"d-flex justify-content-around\">\r\n          <div className=\"col-6 \" style={{ paddingRight: \"1vw\" }}>\r\n            <label className=\"h5 d-block\">Gender</label>\r\n            <Select\r\n              variant=\"standard\"\r\n              fullWidth={true}\r\n              value={gender}\r\n              onChange={(e) => {\r\n                setGender(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value={\"Male\"}>Male</MenuItem>\r\n              <MenuItem value={\"Female\"}>Female</MenuItem>\r\n              <MenuItem value={\"Other\"}>Other</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <label className=\"h5 d-block\">Age</label>\r\n\r\n            <Input\r\n              fullWidth={true}\r\n              value={age}\r\n              type=\"number\"\r\n              inputProps={{ min: 16, max: 150 }}\r\n              onChange={(e) => {\r\n                setAge(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <label className=\"h5 mt-2\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={emailInput}\r\n          onChange={(e) => {\r\n            setEmailInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInput}\r\n          onChange={(e) => {\r\n            setPassInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Confirm Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passConfirmInput}\r\n          onChange={(e) => {\r\n            setPassConfirmInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          className=\"my-3\"\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          // sx={{ backgroundColor: \"#3f2d88\" }}\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleRegister(\r\n              e,\r\n              nameInput,\r\n              gender,\r\n              age,\r\n              emailInput,\r\n              passInput,\r\n              passConfirmInput\r\n            );\r\n          }}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n\r\n      <Link\r\n        to={{ pathname: \"/login\" }}\r\n        onClick={() => {\r\n          setFieldsEmpty();\r\n        }}\r\n      >\r\n        Have an account? Login here\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst Counter = ({ handleChangeCount, fruitCount, transactionState }) => {\r\n  return (\r\n    <FormControl>\r\n      <TextField\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"start\">kg</InputAdornment>,\r\n        }}\r\n        disabled={transactionState}\r\n        size=\"small\"\r\n        inputProps={{ min: 1 }}\r\n        type=\"tel\"\r\n        label=\"Kilo\"\r\n        id=\"select-count\"\r\n        value={isNaN(fruitCount) ? 0 : fruitCount}\r\n        onChange={(e) => {\r\n          handleChangeCount(parseInt(e.target.value, 10));\r\n        }}\r\n      ></TextField>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst RowFruits = ({\r\n  fruitItem,\r\n  fruitPrice,\r\n  handleRemove,\r\n  fruitCount,\r\n  handleCount,\r\n  fruitTotal,\r\n  transactionState,\r\n}) => {\r\n  const handleChangeCount = (number) => {\r\n    if (isNaN(number)) {\r\n      number = 0;\r\n    }\r\n    setCount(number);\r\n    handleCount(fruitItem, fruitPrice, number);\r\n  };\r\n  const [count, setCount] = useState(fruitCount);\r\n\r\n  return (\r\n    <ListItem\r\n      divider={true}\r\n      secondaryAction={\r\n        <IconButton\r\n          disabled={transactionState}\r\n          onClick={() => {\r\n            handleRemove(fruitItem);\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <Box className=\"col-3 text-center\">{fruitItem}</Box>\r\n      <Box className=\"col-3 text-center\"> ₱{fruitPrice}</Box>\r\n      <Counter\r\n        transactionState={transactionState}\r\n        count={count}\r\n        handleChangeCount={handleChangeCount}\r\n        fruitItem={fruitItem}\r\n        fruitCount={fruitCount}\r\n      />\r\n      <Box className=\"col-3 text-center\">\r\n        ₱{isNaN(count) ? \"\" : fruitPrice * count}\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default RowFruits;\r\n","import React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst TransactionRow = ({ item }) => {\r\n  return (\r\n    //   TODO: use tables instead\r\n    <>\r\n      <ListItem divider={true}>\r\n        <Box className=\"col-3 text-center\">{item.item}</Box>\r\n        <Box className=\"col-3 text-center\"> ₱{item.price}</Box>\r\n        <Box className=\"col-3 text-center\">{item.count} kg</Box>\r\n        <Box className=\"col-3 text-center\"> ₱{item.totalPrice}</Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import React from \"react\";\r\n\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Transaction = ({ data, showTransaction, handleBuy }) => {\r\n  return (\r\n    <>\r\n      <h2>Transaction</h2>\r\n      User: {data.name}\r\n      {/* {data.userId} */}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong> ₱{data.total}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"d-flex justify-content-between\">\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            showTransaction(false);\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleBuy();\r\n          }}\r\n        >\r\n          Buy\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst BillModal = ({ data, handleCloseModal }) => {\r\n  return (\r\n    <Box>\r\n      <h2>Your Bill</h2>\r\n      User: {data.userName}\r\n      <br />\r\n      Transaction Id: {data._id}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong>{data.finalBill}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"\">\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth={true}\r\n          onClick={() => {\r\n            handleCloseModal();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BillModal;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport RowFruits from \"./RowFruits\";\r\nimport Transaction from \"./Transaction\";\r\nimport BillModal from \"./BillModal\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst Shop = ({ currentUser, fruits, setFruits }) => {\r\n  const [sessionFruits, setSessionFruits] = useState(fruits);\r\n\r\n  const [selectedFruit, setSelectedFruit] = useState(\"default\");\r\n\r\n  const [cartFruits, setCartFruits] = useState([]);\r\n\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [transactionState, showTransaction] = useState(false);\r\n  const [loading, showLoading] = useState(false);\r\n\r\n  const [transactionItems, setTransactionItems] = useState([]);\r\n  const [serverTransaction, setServerTransaction] = useState([]);\r\n\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const handleConfirm = () => {\r\n    let total = 0;\r\n    for (var key in cartFruits) {\r\n      total += cartFruits[key].totalPrice;\r\n    }\r\n    const tempTransaction = {\r\n      name: currentUser.name,\r\n      userId: currentUser._id,\r\n      items: cartFruits,\r\n      total: total,\r\n    };\r\n    setTransactionItems(tempTransaction);\r\n\r\n    showTransaction(true);\r\n  };\r\n\r\n  const handleRemove = (fruitRemove) => {\r\n    let backFruit = sessionFruits.filter((fruit) => fruit.item === fruitRemove);\r\n    let filteredFruit = cartFruits.filter(\r\n      (fruit) => fruit.item !== fruitRemove\r\n    );\r\n    setCartFruits(filteredFruit);\r\n    const itemObject = backFruit[0];\r\n    setFruits([...fruits, itemObject]);\r\n  };\r\n  const handleRemoveAll = () => {\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n    // console.log(fruits);\r\n  };\r\n  const handleAddFruit = (select) => {\r\n    const item = fruits.find((fruit) => fruit.item === select);\r\n    const filterItem = fruits.filter((fruit) => fruit.item !== select);\r\n    // console.log(filterItem);\r\n    setFruits(filterItem);\r\n    setSelectedFruit(\"default\");\r\n\r\n    // //check if dupe\r\n    // // for each fruit in cart\r\n\r\n    // for (var key in cartFruits) {\r\n    //   if (select === cartFruits[key].item) {\r\n    //     setAlertState(true);\r\n    //     return; //reject action here\r\n    //   }\r\n    // }\r\n    // setAlertState(false);\r\n\r\n    const itemObject = {\r\n      item: select,\r\n      price: item.price,\r\n      count: 1,\r\n      totalPrice: item.price,\r\n    };\r\n\r\n    //only works for adding new items\r\n    setCartFruits([...cartFruits, itemObject]);\r\n  };\r\n\r\n  const handleCount = (fruitItem, fruitPrice, count) => {\r\n    const mappedFruits = cartFruits.map((fruit) =>\r\n      fruit.item === fruitItem\r\n        ? { ...fruit, count: count, totalPrice: fruitPrice * count }\r\n        : fruit\r\n    );\r\n    setCartFruits(mappedFruits);\r\n  };\r\n  const handleBuy = async () => {\r\n    setModalOpen(true);\r\n    showLoading(true);\r\n    const result = await axios.post(`${url}transactions`, {\r\n      name: transactionItems.name,\r\n      userId: transactionItems.userId,\r\n      items: transactionItems.items,\r\n      total: transactionItems.total,\r\n    });\r\n    const id = result.data.data.insertedId;\r\n    const transaction = await axios.get(`${url}transactions/${id}`);\r\n    // console.log(transaction.data.data);\r\n    setServerTransaction(transaction.data.data);\r\n    showLoading(false);\r\n  };\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n    showTransaction(false);\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n  };\r\n\r\n  const modalStyle = {\r\n    position: \"absolute\",\r\n    width: \"75%\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    padding: 4,\r\n  };\r\n\r\n  const [shopLoading, setShopLoading] = useState(false);\r\n  const getAllFruits = async () => {\r\n    // Till the data is fetched using API\r\n    // the Loading page will show.\r\n    setShopLoading(true);\r\n\r\n    // Await will make it wait until that\r\n    // promise settles and return its result\r\n\r\n    const response = await axios.get(`${url}items`);\r\n\r\n    setFruits(response.data.data);\r\n    setShopLoading(false);\r\n  };\r\n\r\n  //runs on startup\r\n  useEffect(() => {\r\n    getAllFruits();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-75 m-auto\">\r\n      {shopLoading ? (\r\n        <div className=\"loading-container w-50 text-center\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Modal open={modalOpen}>\r\n            <Box sx={modalStyle}>\r\n              {loading ? (\r\n                <div className=\"text-center\">\r\n                  <CircularProgress />\r\n                </div>\r\n              ) : (\r\n                <BillModal\r\n                  data={serverTransaction}\r\n                  handleCloseModal={handleCloseModal}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Modal>\r\n\r\n          {alertState ? (\r\n            <Alert\r\n              severity=\"error\"\r\n              className=\"mb-3\"\r\n              onClose={() => {\r\n                setAlertState(false);\r\n              }}\r\n            >\r\n              Fruit already added\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Box className=\"\">\r\n            <Box className=\"d-flex justify-content-between\">\r\n              <Box className=\"d-inline h2\">Shop</Box>\r\n            </Box>\r\n            <Box className=\"row justify-content-center\">\r\n              <Box className=\"\">Hello {currentUser.name}</Box>\r\n            </Box>\r\n            <Box className=\"row justify-content-center w-50 m-auto\">\r\n              <FormControl className=\"col-9\" size=\"small\">\r\n                <InputLabel id=\"select-label-fruits\">Fruits</InputLabel>\r\n                <Select\r\n                  disabled={\r\n                    fruits.length === 0 || transactionState ? true : false\r\n                  }\r\n                  labelId=\"select-label-fruits\"\r\n                  id=\"select-fruits\"\r\n                  value={selectedFruit}\r\n                  label=\"Fruits\"\r\n                  onChange={(e) => {\r\n                    setSelectedFruit(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem disabled value={\"default\"}>\r\n                    Select Fruit\r\n                  </MenuItem>\r\n                  {fruits.map((fruit, index) => (\r\n                    <MenuItem key={index} value={fruit.item}>\r\n                      {fruit.item}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                disabled={\r\n                  selectedFruit === \"default\" || transactionState ? true : false\r\n                }\r\n                variant=\"contained\"\r\n                className=\"col-1\"\r\n                onClick={() => {\r\n                  handleAddFruit(selectedFruit);\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          <Box className=\"row \">\r\n            <List>\r\n              <ListItem\r\n                divider={true}\r\n                secondaryAction={\r\n                  cartFruits.length > 0 && (\r\n                    <IconButton\r\n                      disabled={transactionState}\r\n                      onClick={() => {\r\n                        handleRemoveAll();\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  )\r\n                }\r\n              >\r\n                <Box className=\"col-3 text-center\">Item</Box>\r\n                <Box className=\"col-3 text-center\">Price</Box>\r\n                <Box className=\"col-3 text-center\">Kilo</Box>\r\n\r\n                <Box className=\"col-3 text-center\">Total</Box>\r\n              </ListItem>\r\n              {cartFruits.length > 0 ? (\r\n                cartFruits.map((fruit, index) => (\r\n                  <RowFruits\r\n                    transactionState={transactionState}\r\n                    fruitItem={fruit.item}\r\n                    fruitPrice={fruit.price}\r\n                    fruitCount={fruit.count}\r\n                    fruitTotal={fruit.totalPrice}\r\n                    key={index}\r\n                    handleRemove={handleRemove}\r\n                    handleCount={handleCount}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Box className=\" text-center\">No Fruits Selected</Box>\r\n              )}\r\n            </List>\r\n          </Box>\r\n          <Box className=\"justify-content-end d-flex\">\r\n            <Button\r\n              className=\"\"\r\n              disabled={\r\n                transactionState || cartFruits.length === 0 ? true : false\r\n              }\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                handleConfirm();\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            {transactionState && (\r\n              <Transaction\r\n                handleBuy={handleBuy}\r\n                data={transactionItems}\r\n                showTransaction={showTransaction}\r\n              />\r\n            )}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import { GoogleLogout } from \"react-google-login\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst NavBar = ({\r\n  showlogoutButton,\r\n  clientId,\r\n  onSignoutSuccess,\r\n  handleLogout,\r\n}) => {\r\n  return (\r\n    <nav className=\"bg-white border p-1 d-flex justify-content-between\">\r\n      <div>\r\n        <div className=\"d-inline-block\">\r\n          <Link to={{ pathname: \"/home\" }} className=\"nav-link text-nowrap\">\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <div className=\"d-inline-block\">\r\n          <Link to={{ pathname: \"/shop\" }} className=\"nav-link text-nowrap\">\r\n            Shop\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {showlogoutButton ? (\r\n        <GoogleLogout\r\n          clientId={clientId}\r\n          buttonText=\"Sign Out\"\r\n          onLogoutSuccess={onSignoutSuccess}\r\n        ></GoogleLogout>\r\n      ) : (\r\n        <Button\r\n          onClick={() => {\r\n            handleLogout();\r\n          }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nconst Home = ({ currentUser }) => {\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n  const [transactionList, setTransactionList] = useState([]);\r\n  const [homeLoading, setHomeLoading] = useState(false);\r\n\r\n  const getList = async () => {\r\n    setHomeLoading(true);\r\n    const id = currentUser._id;\r\n    const list = await axios.get(`${url}transactions/list/${id}`);\r\n    // console.log(list.data.data);\r\n    setHomeLoading(false);\r\n    setTransactionList(list.data.data);\r\n  };\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n  return (\r\n    <div className=\"mx-3\">\r\n      <h2>Home</h2>\r\n      {homeLoading ? (\r\n        <div className=\"loading-container w-50 text-center\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div className=\"w-75 m-auto\">\r\n          {transactionList.map((list) => {\r\n            return (\r\n              <div key={list._id} className=\"transaction-container \">\r\n                <h5>Item </h5>\r\n                <List>\r\n                  <ListItem divider={true}>\r\n                    <div className=\"col-3 text-center\">Item</div>\r\n                    <div className=\"col-3 text-center\">Price</div>\r\n                    <div className=\"col-3 text-center\">Kilo</div>\r\n                    <div className=\"col-3 text-center\">Total Price</div>\r\n                  </ListItem>\r\n                </List>\r\n                <List>\r\n                  {list.items.map((item) => {\r\n                    return (\r\n                      <ListItem divider={true} key={item.item}>\r\n                        <div className=\"col-3 text-center\">{item.item}</div>\r\n                        <div className=\"col-3 text-center\">₱{item.price}</div>\r\n                        <div className=\"col-3 text-center\">{item.count}</div>\r\n                        <div className=\"col-3 text-center\">\r\n                          ₱{item.totalPrice}\r\n                        </div>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                  <ListItem>\r\n                    <div className=\"col-3 text-center\">Final Bill</div>\r\n                    <div className=\"col-3 text-center\"></div>\r\n                    <div className=\"col-3 text-center\"></div>\r\n                    <div className=\"col-3 text-center\"></div>\r\n                  </ListItem>\r\n                </List>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { Input, FormControl, InputLabel, FormHelperText } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport axios from \"axios\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, showError] = useState({ state: false });\r\n  const [success, showSuccess] = useState({ state: false });\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const sendEmail = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const token = await axios.post(`${url}reset/`, {\r\n      email,\r\n    });\r\n    if (token.data.token) {\r\n      // todo https://www.emailjs.com/docs/rest-api/send/\r\n      emailjs\r\n        .send(\r\n          \"reset_service\",\r\n          \"reset_form\",\r\n          {\r\n            user_email: email,\r\n            link: `https://marclloyd01.github.io/dist/react-mongo-client-dist/#/reset-password?auth=${token.data.token}`,\r\n          },\r\n          \"user_j4ULTrjbib35gu1MBHaei\"\r\n        )\r\n        .then(\r\n          (result) => {\r\n            setLoading(false);\r\n            showSuccess({\r\n              state: true,\r\n              message: \"An email with instructions has been sent.\",\r\n            });\r\n          },\r\n          (error) => {\r\n            setLoading(false);\r\n            showError({ state: true, message: \"Email does not exist\" });\r\n          }\r\n        );\r\n    } else {\r\n      setLoading(false);\r\n      showError({\r\n        state: true,\r\n        message: \"No account is associated with this email address\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"dark-border vertical-center p-3 w-25\">\r\n      <h2>Forgot Password</h2>\r\n      <form onSubmit={(e) => sendEmail(e)}>\r\n        <FormControl variant=\"standard\" fullWidth={true}>\r\n          <InputLabel htmlFor=\"email-input\">Email</InputLabel>\r\n          <Input\r\n            id=\"email-input\"\r\n            error={error.state}\r\n            className=\"my-2\"\r\n            name=\"user_email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n              showError({ state: false });\r\n              showSuccess({ state: false });\r\n            }}\r\n          />\r\n          {error.state && (\r\n            <FormHelperText id=\"email-input-text\" error={error.state}>\r\n              {error.message}\r\n            </FormHelperText>\r\n          )}\r\n          {success.state && (\r\n            <FormHelperText id=\"email-input-text\">\r\n              {success.message}\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n        <Link to={{ pathname: \"/login\" }}>\r\n          Already have an account? Login here\r\n        </Link>\r\n        <Button\r\n          disabled={loading}\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          variant=\"contained\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { FormHelperText } from \"@mui/material\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst ResetPassword = () => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [passInput, setPassInput] = useState(\"\");\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [allowed, setAllowed] = useState(false);\r\n\r\n  const [userName, setName] = useState(\"\");\r\n\r\n  const [token, setToken] = useState(\"\");\r\n  const [currentEmail, setCurrentEmail] = useState(\"\");\r\n\r\n  const [error, showError] = useState({ state: false });\r\n  const [success, showSuccess] = useState({ state: false });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  useEffect(() => {\r\n    setToken(searchParams.get(\"auth\"));\r\n    const getAuth = async () => {\r\n      const authorization = await axios.post(`${url}reset/verification`, null, {\r\n        headers: { Authorization: `Bearer ${searchParams.get(\"auth\")}` },\r\n      });\r\n\r\n      if (authorization.data.data !== null) {\r\n        setAllowed(true);\r\n        setCurrentEmail(authorization.data.data.email);\r\n        setName(authorization.data.data.name);\r\n      }\r\n    };\r\n    getAuth();\r\n  }, []);\r\n\r\n  const confirmNewPassword = async () => {\r\n    setLoading(true);\r\n    const result = await axios.post(\r\n      `${url}reset/reset-password`,\r\n      { email: currentEmail, newPassword: passInput },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    if (result.data.data.acknowledged) {\r\n      // password changed successfully\r\n      // destroy token\r\n      showSuccess({ state: true, message: \"Password changed successfully\" });\r\n      showError({ state: false });\r\n    } else {\r\n      //\r\n      showError({ state: true, message: \"Error with changing password\" });\r\n      showSuccess({ state: false });\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {allowed ? (\r\n        <div className=\"dark-border vertical-center p-3 w-25\">\r\n          <h2>Reset Password</h2>\r\n          <h4>Hello {userName}</h4>\r\n\r\n          <Input\r\n            disabled={loading}\r\n            fullWidth={true}\r\n            className=\"my-1\"\r\n            type={showPass ? \"text\" : \"password\"}\r\n            placeholder=\"New Password\"\r\n            value={passInput}\r\n            onChange={(e) => {\r\n              setPassInput(e.target.value);\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment\r\n                position=\"end\"\r\n                onClick={() => {\r\n                  setShowPass(!showPass);\r\n                }}\r\n              >\r\n                <IconButton>\r\n                  {showPass ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {error.state && (\r\n            <FormHelperText error={error.state}>{error.message}</FormHelperText>\r\n          )}\r\n          {success.state && <FormHelperText>{success.message}</FormHelperText>}\r\n          <Button\r\n            disabled={loading}\r\n            fullWidth={true}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              confirmNewPassword();\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import axios from \"axios\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Shop from \"./components/Shop\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./components/Home\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\r\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport ResetPassword from \"./components/ResetPassword\";\r\n\r\nfunction App() {\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const [fruits, setFruits] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [regLoading, setRegLoading] = useState(false);\r\n  const [regSuccess, setRegSuccess] = useState(false);\r\n  const [justRegistered, setJustRegistered] = useState(false);\r\n\r\n  const [invalidRegister, setInvalidRegister] = useState(false);\r\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\r\n  const [emailExists, setEmailExists] = useState(false);\r\n  const [fieldsEmpty, setFieldsEmpty] = useState(false);\r\n\r\n  const [accountNotExists, setAccountNotExists] = useState(false);\r\n  const [loginFail, setLoginFail] = useState(false);\r\n  const [loginLoading, setLoginLoading] = useState(false);\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  //Register\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passInput, setPassInput] = useState(\"\");\r\n  const [passConfirmInput, setPassConfirmInput] = useState(\"\");\r\n  const [age, setAge] = useState();\r\n  const [gender, setGender] = useState(\"Male\");\r\n\r\n  const handleRegister = async (\r\n    e,\r\n    name,\r\n    gender,\r\n    age,\r\n    email,\r\n    pass,\r\n    passConfirmInput\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    setRegLoading(false);\r\n    setRegSuccess(false);\r\n    setInvalidRegister(false);\r\n    setFieldsEmpty(false);\r\n    setPasswordMismatch(false);\r\n    setEmailExists(false);\r\n\r\n    //checks if fields are empty\r\n    if (email === \"\" || pass === \"\" || passConfirmInput === \"\" || name === \"\") {\r\n      setFieldsEmpty(true);\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setInvalidRegister(true);\r\n      return;\r\n    }\r\n\r\n    if (pass !== passConfirmInput) {\r\n      setPasswordMismatch(true);\r\n      return;\r\n    }\r\n    setRegLoading(true);\r\n\r\n    const existingEmail = await axios.post(`${url}users/validate`, {\r\n      email: email,\r\n    });\r\n\r\n    if (existingEmail.data[\"data\"] !== null) {\r\n      setEmailExists(true);\r\n      setRegLoading(false);\r\n\r\n      return;\r\n    }\r\n\r\n    const response = await axios.post(`${url}users`, {\r\n      name: name,\r\n      pass: pass,\r\n      email: email,\r\n      info: [{ gender: gender }, { age: age }],\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      setRegLoading(false);\r\n      setRegSuccess(true);\r\n      setJustRegistered(true);\r\n      setJustRegistered(false);\r\n    }\r\n  }; // end of handleRegister\r\n\r\n  const handleLogin = async (email, pass, e) => {\r\n    e.preventDefault();\r\n    setRegSuccess(false);\r\n\r\n    setFieldsEmpty(false);\r\n    setAccountNotExists(false);\r\n\r\n    setLoginFail(false);\r\n    setLoginLoading(false);\r\n    setInvalidEmail(false);\r\n\r\n    if (email === \"\" || pass === \"\") {\r\n      setFieldsEmpty(true);\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setInvalidEmail(true);\r\n      return;\r\n    }\r\n\r\n    setLoginLoading(true);\r\n\r\n    const existingEmail = await axios.post(`${url}users/validate`, {\r\n      email: email,\r\n    });\r\n\r\n    if (existingEmail.data[\"data\"] === null) {\r\n      setAccountNotExists(true);\r\n      setLoginLoading(false);\r\n      return;\r\n    }\r\n\r\n    const response = await axios.post(`${url}users/login`, {\r\n      email: email,\r\n      pass: pass,\r\n    });\r\n\r\n    if (response.data[\"data\"] === null) {\r\n      setLoginLoading(false);\r\n      setLoginFail(true);\r\n      return;\r\n    }\r\n    setCurrentUser(response.data[\"data\"]);\r\n    setLoginLoading(false);\r\n    setIsLoggedIn(true);\r\n  }; //end of handleLogin\r\n\r\n  const validateEmail = (email) => {\r\n    let re =\r\n      /[a-zA-Z0-9!@#$%&'*+'-=]+@[a-zA-Z0-9!@#$%&'*+'-=]+\\.[a-zA-Z0-9!@#$%&'*+'-=]+/;\r\n    return re.test(email);\r\n  };\r\n  //Google\r\n  const clientId =\r\n    \"768770191011-bm2rl6eidg2nmg84615oq9qp7rsg0ms9.apps.googleusercontent.com\";\r\n  const [showloginButton, setShowloginButton] = useState(true);\r\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\r\n\r\n  const onLoginSuccess = async (res) => {\r\n    console.log(res.profileObj);\r\n    setRegLoading(false);\r\n    setRegSuccess(false);\r\n    setInvalidRegister(false);\r\n    setFieldsEmpty(false);\r\n    setPasswordMismatch(false);\r\n    setEmailExists(false);\r\n    setLoading(true);\r\n\r\n    const existingEmail = await axios.post(`${url}users/validate`, {\r\n      email: res.profileObj.email,\r\n    });\r\n\r\n    if (existingEmail.data.data !== null) {\r\n      console.log(existingEmail.data.data);\r\n      setCurrentUser(existingEmail.data.data);\r\n      setIsLoggedIn(true);\r\n      setLoading(false);\r\n      setShowloginButton(false);\r\n      setShowlogoutButton(true);\r\n    } else if (existingEmail.data.data === null) {\r\n      console.log(\"does not exist\");\r\n      setShowloginButton(true);\r\n      setIsLoggedIn(false);\r\n      setLoading(false);\r\n      setEmailInput(res.profileObj.email);\r\n      setNameInput(res.profileObj.givenName);\r\n      window.location = \"./#/register\";\r\n    }\r\n  };\r\n\r\n  const onLoginFailure = (res) => {\r\n    setRegLoading(false);\r\n    setRegSuccess(false);\r\n    setInvalidRegister(false);\r\n    setFieldsEmpty(false);\r\n    setPasswordMismatch(false);\r\n    setEmailExists(false);\r\n    console.log(\"Login Failed:\", res);\r\n  };\r\n\r\n  const onSignoutSuccess = () => {\r\n    alert(\"You have been logged out successfully\");\r\n    console.clear();\r\n    setShowloginButton(true);\r\n    setShowlogoutButton(false);\r\n    setIsLoggedIn(false);\r\n    setCurrentUser();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setCurrentUser();\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && (\r\n        <NavBar\r\n          clientId={clientId}\r\n          showlogoutButton={showlogoutButton}\r\n          onSignoutSuccess={onSignoutSuccess}\r\n          handleLogout={handleLogout}\r\n        />\r\n      )}\r\n      {loading ? (\r\n        <div className=\"loading-container w-50 text-center\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Navigate to=\"/login\" />} />\r\n          <Route\r\n            path=\"/login\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Navigate to=\"/home\" />\r\n              ) : (\r\n                <div className=\"dark-border vertical-center p-3\">\r\n                  {fieldsEmpty && (\r\n                    <Alert\r\n                      severity=\"error\"\r\n                      onClose={() => {\r\n                        setFieldsEmpty(false);\r\n                      }}\r\n                    >\r\n                      Please fill out all fields{\" \"}\r\n                    </Alert>\r\n                  )}\r\n                  {regSuccess && (\r\n                    <Alert\r\n                      severity=\"success\"\r\n                      onClose={() => {\r\n                        setRegSuccess(false);\r\n                      }}\r\n                    >\r\n                      Registration successful\r\n                    </Alert>\r\n                  )}\r\n                  <Login\r\n                    handleLogin={handleLogin}\r\n                    loginLoading={loginLoading}\r\n                    accountNotExists={accountNotExists}\r\n                    setAccountNotExists={setAccountNotExists}\r\n                    loginFail={loginFail}\r\n                    setLoginFail={setLoginFail}\r\n                    invalidEmail={invalidEmail}\r\n                    setInvalidEmail={setInvalidEmail}\r\n                    setFieldsEmpty={setFieldsEmpty}\r\n                    showloginButton={showloginButton}\r\n                    clientId={clientId}\r\n                    onLoginSuccess={onLoginSuccess}\r\n                    onLoginFailure={onLoginFailure}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n          {justRegistered ? (\r\n            <Route path=\"/register\" element={<Navigate to=\"/\" />} />\r\n          ) : (\r\n            <Route\r\n              path=\"/register\"\r\n              element={\r\n                <div className=\"dark-border vertical-center p-3\">\r\n                  <Register\r\n                    handleRegister={handleRegister}\r\n                    regLoading={regLoading}\r\n                    invalidRegister={invalidRegister}\r\n                    setInvalidRegister={setInvalidRegister}\r\n                    passwordMismatch={passwordMismatch}\r\n                    setPasswordMismatch={setPasswordMismatch}\r\n                    emailExists={emailExists}\r\n                    setEmailExists={setEmailExists}\r\n                    fieldsEmpty={fieldsEmpty}\r\n                    setFieldsEmpty={setFieldsEmpty}\r\n                    nameInput={nameInput}\r\n                    setNameInput={setNameInput}\r\n                    emailInput={emailInput}\r\n                    setEmailInput={setEmailInput}\r\n                    passInput={passInput}\r\n                    setPassInput={setPassInput}\r\n                    passConfirmInput={passConfirmInput}\r\n                    setPassConfirmInput={setPassConfirmInput}\r\n                    age={age}\r\n                    setAge={setAge}\r\n                    gender={gender}\r\n                    setGender={setGender}\r\n                  />\r\n                </div>\r\n              }\r\n            />\r\n          )}\r\n\r\n          <Route\r\n            path=\"/home\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Home currentUser={currentUser} />\r\n              ) : (\r\n                <Navigate to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/shop\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Shop\r\n                  currentUser={currentUser}\r\n                  fruits={fruits}\r\n                  setFruits={setFruits}\r\n                />\r\n              ) : (\r\n                <Navigate to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n          <Route path=\"/forgot-password\" element={<ForgotPassword />} />\r\n          <Route path=\"/reset-password\" element={<ResetPassword />} />\r\n        </Routes>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"g-signin\"></div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}