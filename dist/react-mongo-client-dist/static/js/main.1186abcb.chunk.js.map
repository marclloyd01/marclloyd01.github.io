{"version":3,"sources":["components/Login.js","components/Register.js","components/Counter.js","components/RowFruits.js","components/TransactionRow.js","components/Transaction.js","components/BillModal.js","components/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleLogin","loginLoading","loginFail","invalidEmail","accountNotExists","setAccountNotExists","setLoginFail","setInvalidEmail","setFieldsEmpty","showloginButton","clientId","onLoginSuccess","onLoginFailure","useState","emailInputLogin","setEmailInputLogin","passInputLogin","setPassInputLogin","showPass","setShowPass","Box","className","Alert","severity","onClose","Input","fullWidth","placeholder","value","onChange","e","target","type","endAdornment","InputAdornment","position","onClick","IconButton","Button","variant","to","pathname","onSuccess","onFailure","cookiePolicy","Register","handleRegister","regLoading","invalidRegister","setInvalidRegister","passwordMismatch","setPasswordMismatch","emailExists","setEmailExists","nameInput","setNameInput","emailInput","setEmailInput","passInput","setPassInput","passConfirmInput","setPassConfirmInput","Counter","handleChangeCount","fruitCount","transactionState","FormControl","TextField","InputProps","disabled","size","inputProps","min","label","id","isNaN","parseInt","RowFruits","fruitItem","fruitPrice","handleRemove","handleCount","fruitTotal","count","setCount","ListItem","divider","secondaryAction","number","TransactionRow","item","price","totalPrice","Transaction","data","showTransaction","handleBuy","name","List","items","length","map","index","total","BillModal","handleCloseModal","userName","_id","finalBill","Shop","currentUser","fruits","setFruits","showlogoutButton","onSignoutSuccess","handleLogout","sessionFruits","selectedFruit","setSelectedFruit","cartFruits","setCartFruits","alertState","setAlertState","loading","showLoading","transactionItems","setTransactionItems","serverTransaction","setServerTransaction","url","fruitRemove","backFruit","filter","fruit","filteredFruit","itemObject","mappedFruits","a","setModalOpen","axios","post","userId","result","insertedId","get","transaction","modalOpen","Modal","open","sx","width","top","left","transform","bgcolor","boxShadow","padding","CircularProgress","buttonText","onLogoutSuccess","InputLabel","Select","labelId","MenuItem","select","find","filterItem","handleAddFruit","key","tempTransaction","handleConfirm","App","setLoading","setRegLoading","regSuccess","setRegSuccess","justRegistered","setJustRegistered","fieldsEmpty","setLoginLoading","isLoggedIn","setIsLoggedIn","setCurrentUser","getAllFruits","response","useEffect","email","pass","preventDefault","console","log","validateEmail","status","test","setShowloginButton","setShowlogoutButton","res","profileObj","existingEmail","givenName","window","location","alert","clear","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1186abcb.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst Login = ({\r\n  handleLogin,\r\n  loginLoading,\r\n  loginFail,\r\n  invalidEmail,\r\n  accountNotExists,\r\n  setAccountNotExists,\r\n  setLoginFail,\r\n  setInvalidEmail,\r\n  setFieldsEmpty,\r\n  showloginButton,\r\n  clientId,\r\n  onLoginSuccess,\r\n  onLoginFailure,\r\n}) => {\r\n  const [emailInputLogin, setEmailInputLogin] = useState(\"\");\r\n  const [passInputLogin, setPassInputLogin] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <Box className=\"\">\r\n      {accountNotExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setAccountNotExists(false);\r\n          }}\r\n        >\r\n          Account does not exist\r\n        </Alert>\r\n      )}\r\n      {loginFail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setLoginFail(false);\r\n          }}\r\n        >\r\n          Login failed\r\n        </Alert>\r\n      )}\r\n      {invalidEmail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidEmail(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      {loginLoading && <Alert severity=\"info\">Logging in...</Alert>}\r\n      <form>\r\n        <h2>Login</h2>\r\n        <label className=\"h5\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Email\"\r\n          value={emailInputLogin}\r\n          onChange={(e) => {\r\n            setEmailInputLogin(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInputLogin}\r\n          onChange={(e) => {\r\n            setPassInputLogin(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          className=\"my-3\"\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleLogin(emailInputLogin, passInputLogin, e);\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Box className=\"d-flex justify-content-between\">\r\n          <Link\r\n            to={{ pathname: \"./register\" }}\r\n            onClick={() => {\r\n              setFieldsEmpty();\r\n            }}\r\n          >\r\n            Don't have an account? Register here\r\n          </Link>\r\n\r\n          {showloginButton ? (\r\n            <GoogleLogin\r\n              clientId={clientId}\r\n              onSuccess={onLoginSuccess}\r\n              onFailure={onLoginFailure}\r\n              cookiePolicy={\"single_host_origin\"}\r\n              // isSignedIn={true}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Register = ({\r\n  handleRegister,\r\n  regLoading,\r\n  invalidRegister,\r\n  setInvalidRegister,\r\n  passwordMismatch,\r\n  setPasswordMismatch,\r\n  emailExists,\r\n  setEmailExists,\r\n  setFieldsEmpty,\r\n  nameInput,\r\n  setNameInput,\r\n  emailInput,\r\n  setEmailInput,\r\n  passInput,\r\n  setPassInput,\r\n  passConfirmInput,\r\n  setPassConfirmInput,\r\n}) => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {passwordMismatch && (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"my-3\"\r\n          onClose={() => {\r\n            setPasswordMismatch(false);\r\n          }}\r\n        >\r\n          Passwords do not match\r\n        </Alert>\r\n      )}\r\n      {emailExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setEmailExists(false);\r\n          }}\r\n        >\r\n          Email already exists{\" \"}\r\n        </Alert>\r\n      )}\r\n      {regLoading && <Alert severity=\"info\"> Registering... </Alert>}\r\n      {invalidRegister && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidRegister(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      <h2>Register</h2>\r\n      <form>\r\n        <label className=\"h5 d-block\">Name</label>\r\n        {/* <InputLabel>Name</InputLabel> */}\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Name\"\r\n          value={nameInput}\r\n          onChange={(e) => {\r\n            setNameInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={emailInput}\r\n          onChange={(e) => {\r\n            setEmailInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInput}\r\n          onChange={(e) => {\r\n            setPassInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Confirm Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passConfirmInput}\r\n          onChange={(e) => {\r\n            setPassConfirmInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          className=\"my-3\"\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          // sx={{ backgroundColor: \"#3f2d88\" }}\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleRegister(\r\n              emailInput,\r\n              passInput,\r\n              nameInput,\r\n              passConfirmInput,\r\n              e\r\n            );\r\n          }}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n\r\n      <Link\r\n        to={{ pathname: \"/\" }}\r\n        onClick={() => {\r\n          setFieldsEmpty();\r\n        }}\r\n      >\r\n        Have an account? Login here\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst Counter = ({ handleChangeCount, fruitCount, transactionState }) => {\r\n  return (\r\n    <FormControl>\r\n      <TextField\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"start\">kg</InputAdornment>,\r\n        }}\r\n        disabled={transactionState}\r\n        size=\"small\"\r\n        inputProps={{ min: 1 }}\r\n        type=\"tel\"\r\n        label=\"Kilo\"\r\n        id=\"select-count\"\r\n        value={isNaN(fruitCount) ? 0 : fruitCount}\r\n        onChange={(e) => {\r\n          handleChangeCount(parseInt(e.target.value, 10));\r\n        }}\r\n      ></TextField>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst RowFruits = ({\r\n  fruitItem,\r\n  fruitPrice,\r\n  handleRemove,\r\n  fruitCount,\r\n  handleCount,\r\n  fruitTotal,\r\n  transactionState,\r\n}) => {\r\n  const handleChangeCount = (number) => {\r\n    if (isNaN(number)) {\r\n      number = 0;\r\n    }\r\n    setCount(number);\r\n    handleCount(fruitItem, fruitPrice, number);\r\n  };\r\n  const [count, setCount] = useState(fruitCount);\r\n\r\n  return (\r\n    <ListItem\r\n      divider={true}\r\n      secondaryAction={\r\n        <IconButton\r\n          disabled={transactionState}\r\n          onClick={() => {\r\n            handleRemove(fruitItem);\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <Box className=\"col-3 text-center\">{fruitItem}</Box>\r\n      <Box className=\"col-3 text-center\"> ₱{fruitPrice}</Box>\r\n      <Counter\r\n        transactionState={transactionState}\r\n        count={count}\r\n        handleChangeCount={handleChangeCount}\r\n        fruitItem={fruitItem}\r\n        fruitCount={fruitCount}\r\n      />\r\n      <Box className=\"col-3 text-center\">\r\n        ₱{isNaN(count) ? \"\" : fruitPrice * count}\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default RowFruits;\r\n","import React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst TransactionRow = ({ item }) => {\r\n  return (\r\n    //   TODO: use tables instead\r\n    <>\r\n      <ListItem divider={true}>\r\n        <Box className=\"col-3 text-center\">{item.item}</Box>\r\n        <Box className=\"col-3 text-center\"> ₱{item.price}</Box>\r\n        <Box className=\"col-3 text-center\">{item.count} kg</Box>\r\n        <Box className=\"col-3 text-center\"> ₱{item.totalPrice}</Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import React from \"react\";\r\n\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Transaction = ({ data, showTransaction, handleBuy }) => {\r\n  return (\r\n    <>\r\n      <h2>Transaction</h2>\r\n      User: {data.name}\r\n      {/* {data.userId} */}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong> ₱{data.total}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"d-flex justify-content-between\">\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            showTransaction(false);\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleBuy();\r\n          }}\r\n        >\r\n          Buy\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst BillModal = ({ data, handleCloseModal }) => {\r\n  return (\r\n    <Box>\r\n      <h2>Your Bill</h2>\r\n      User: {data.userName}\r\n      <br />\r\n      Transaction Id: {data._id}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong>{data.finalBill}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"\">\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth={true}\r\n          onClick={() => {\r\n            handleCloseModal();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BillModal;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport RowFruits from \"./RowFruits\";\r\nimport Transaction from \"./Transaction\";\r\nimport BillModal from \"./BillModal\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\nconst Shop = ({\r\n  currentUser,\r\n  fruits,\r\n  setFruits,\r\n  showlogoutButton,\r\n  clientId,\r\n  onSignoutSuccess,\r\n  handleLogout,\r\n}) => {\r\n  const [sessionFruits, setSessionFruits] = useState(fruits);\r\n\r\n  const [selectedFruit, setSelectedFruit] = useState(\"default\");\r\n\r\n  const [cartFruits, setCartFruits] = useState([]);\r\n\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [transactionState, showTransaction] = useState(false);\r\n  const [loading, showLoading] = useState(false);\r\n\r\n  const [transactionItems, setTransactionItems] = useState([]);\r\n  const [serverTransaction, setServerTransaction] = useState([]);\r\n\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const handleConfirm = () => {\r\n    let total = 0;\r\n    for (var key in cartFruits) {\r\n      total += cartFruits[key].totalPrice;\r\n    }\r\n    const tempTransaction = {\r\n      name: currentUser.name,\r\n      userId: currentUser._id,\r\n      items: cartFruits,\r\n      total: total,\r\n    };\r\n    setTransactionItems(tempTransaction);\r\n\r\n    showTransaction(true);\r\n  };\r\n\r\n  const handleRemove = (fruitRemove) => {\r\n    let backFruit = sessionFruits.filter((fruit) => fruit.item === fruitRemove);\r\n    let filteredFruit = cartFruits.filter(\r\n      (fruit) => fruit.item !== fruitRemove\r\n    );\r\n    setCartFruits(filteredFruit);\r\n    const itemObject = backFruit[0];\r\n    setFruits([...fruits, itemObject]);\r\n  };\r\n  const handleRemoveAll = () => {\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n    // console.log(fruits);\r\n  };\r\n  const handleAddFruit = (select) => {\r\n    const item = fruits.find((fruit) => fruit.item === select);\r\n    const filterItem = fruits.filter((fruit) => fruit.item !== select);\r\n    // console.log(filterItem);\r\n    setFruits(filterItem);\r\n    setSelectedFruit(\"default\");\r\n\r\n    // //check if dupe\r\n    // // for each fruit in cart\r\n\r\n    // for (var key in cartFruits) {\r\n    //   if (select === cartFruits[key].item) {\r\n    //     setAlertState(true);\r\n    //     return; //reject action here\r\n    //   }\r\n    // }\r\n    // setAlertState(false);\r\n\r\n    const itemObject = {\r\n      item: select,\r\n      price: item.price,\r\n      count: 1,\r\n      totalPrice: item.price,\r\n    };\r\n\r\n    //only works for adding new items\r\n    setCartFruits([...cartFruits, itemObject]);\r\n  };\r\n\r\n  const handleCount = (fruitItem, fruitPrice, count) => {\r\n    const mappedFruits = cartFruits.map((fruit) =>\r\n      fruit.item === fruitItem\r\n        ? { ...fruit, count: count, totalPrice: fruitPrice * count }\r\n        : fruit\r\n    );\r\n    setCartFruits(mappedFruits);\r\n  };\r\n  const handleBuy = async () => {\r\n    setModalOpen(true);\r\n    showLoading(true);\r\n    const result = await axios.post(`${url}transactions`, {\r\n      name: transactionItems.name,\r\n      userId: transactionItems.userId,\r\n      items: transactionItems.items,\r\n      total: transactionItems.total,\r\n    });\r\n    const id = result.data.data.insertedId;\r\n    const transaction = await axios.get(`${url}transactions/${id}`);\r\n    // console.log(transaction.data.data);\r\n    setServerTransaction(transaction.data.data);\r\n    showLoading(false);\r\n  };\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n    showTransaction(false);\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n  };\r\n\r\n  const modalStyle = {\r\n    position: \"absolute\",\r\n    width: \"75%\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    padding: 4,\r\n  };\r\n  return (\r\n    <>\r\n      <Modal open={modalOpen}>\r\n        <Box sx={modalStyle}>\r\n          {loading ? (\r\n            <div className=\"text-center\">\r\n              <CircularProgress />\r\n            </div>\r\n          ) : (\r\n            <BillModal\r\n              data={serverTransaction}\r\n              handleCloseModal={handleCloseModal}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n      {alertState ? (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"mb-3\"\r\n          onClose={() => {\r\n            setAlertState(false);\r\n          }}\r\n        >\r\n          Fruit already added\r\n        </Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Box className=\"\">\r\n        <Box className=\"d-flex justify-content-between\">\r\n          <Box className=\"d-inline h2\">Shop</Box>\r\n\r\n          {showlogoutButton ? (\r\n            <GoogleLogout\r\n              clientId={clientId}\r\n              buttonText=\"Sign Out\"\r\n              onLogoutSuccess={onSignoutSuccess}\r\n            ></GoogleLogout>\r\n          ) : (\r\n            <Button\r\n              onClick={() => {\r\n                handleLogout();\r\n              }}\r\n            >\r\n              logout\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        <Box className=\"row justify-content-center\">\r\n          <Box className=\"\">Hello {currentUser.name}</Box>\r\n        </Box>\r\n        <Box className=\"row justify-content-center w-50 m-auto\">\r\n          <FormControl className=\"col-9\" size=\"small\">\r\n            <InputLabel id=\"select-label-fruits\">Fruits</InputLabel>\r\n            <Select\r\n              disabled={fruits.length === 0 || transactionState ? true : false}\r\n              labelId=\"select-label-fruits\"\r\n              id=\"select-fruits\"\r\n              value={selectedFruit}\r\n              label=\"Fruits\"\r\n              onChange={(e) => {\r\n                setSelectedFruit(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem disabled value={\"default\"}>\r\n                Select Fruit\r\n              </MenuItem>\r\n              {fruits.map((fruit, index) => (\r\n                <MenuItem key={index} value={fruit.item}>\r\n                  {fruit.item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button\r\n            disabled={\r\n              selectedFruit === \"default\" || transactionState ? true : false\r\n            }\r\n            variant=\"contained\"\r\n            className=\"col-1\"\r\n            onClick={() => {\r\n              handleAddFruit(selectedFruit);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Box className=\"row \">\r\n        <List>\r\n          <ListItem\r\n            divider={true}\r\n            secondaryAction={\r\n              cartFruits.length > 0 && (\r\n                <IconButton\r\n                  disabled={transactionState}\r\n                  onClick={() => {\r\n                    handleRemoveAll();\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          >\r\n            <Box className=\"col-3 text-center\">Item</Box>\r\n            <Box className=\"col-3 text-center\">Price</Box>\r\n            <Box className=\"col-3 text-center\">Kilo</Box>\r\n\r\n            <Box className=\"col-3 text-center\">Total</Box>\r\n          </ListItem>\r\n          {cartFruits.length > 0 ? (\r\n            cartFruits.map((fruit, index) => (\r\n              <RowFruits\r\n                transactionState={transactionState}\r\n                fruitItem={fruit.item}\r\n                fruitPrice={fruit.price}\r\n                fruitCount={fruit.count}\r\n                fruitTotal={fruit.totalPrice}\r\n                key={index}\r\n                handleRemove={handleRemove}\r\n                handleCount={handleCount}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Box className=\" text-center\">No Fruits Selected</Box>\r\n          )}\r\n        </List>\r\n      </Box>\r\n      <Box className=\"justify-content-end d-flex\">\r\n        <Button\r\n          className=\"\"\r\n          disabled={transactionState || cartFruits.length === 0 ? true : false}\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleConfirm();\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {transactionState && (\r\n          <Transaction\r\n            handleBuy={handleBuy}\r\n            data={transactionItems}\r\n            showTransaction={showTransaction}\r\n          />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import axios from \"axios\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Shop from \"./components/Shop\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport { Navigate } from \"react-router-dom\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport Box from \"@mui/material/Box\";\nimport Alert from \"@mui/material/Alert\";\n\nfunction App() {\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\n\n  const [fruits, setFruits] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [regLoading, setRegLoading] = useState(false);\n  const [regSuccess, setRegSuccess] = useState(false);\n  const [justRegistered, setJustRegistered] = useState(false);\n\n  const [invalidRegister, setInvalidRegister] = useState(false);\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n  const [fieldsEmpty, setFieldsEmpty] = useState(false);\n\n  const [accountNotExists, setAccountNotExists] = useState(false);\n  const [loginFail, setLoginFail] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  //Register\n  const [nameInput, setNameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passInput, setPassInput] = useState(\"\");\n  const [passConfirmInput, setPassConfirmInput] = useState(\"\");\n\n  const getAllFruits = async () => {\n    // Till the data is fetched using API\n    // the Loading page will show.\n    setLoading(true);\n\n    // Await will make it wait until that\n    // promise settles and return its result\n\n    const response = await axios.get(`${url}items`);\n\n    setFruits(response.data.data);\n    setLoading(false);\n  };\n\n  //runs on startup\n  useEffect(() => {\n    getAllFruits();\n  }, []);\n\n  const handleRegister = async (email, pass, name, passConfirmInput, e) => {\n    e.preventDefault();\n\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n\n    //checks if fields are empty\n    if (email === \"\" || pass === \"\" || passConfirmInput === \"\" || name === \"\") {\n      console.log(\"empty\");\n      setFieldsEmpty(true);\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setInvalidRegister(true);\n      return;\n    }\n\n    if (pass !== passConfirmInput) {\n      setPasswordMismatch(true);\n      return;\n    }\n    setRegLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: email,\n    });\n\n    if (existingEmail.data[\"data\"] !== null) {\n      setEmailExists(true);\n      setRegLoading(false);\n\n      return;\n    }\n\n    const response = await axios.post(`${url}users`, {\n      name: name,\n      pass: pass,\n      email: email,\n    });\n\n    if (response.status === 200) {\n      setRegLoading(false);\n      setRegSuccess(true);\n      setJustRegistered(true);\n      setJustRegistered(false);\n    }\n  }; // end of handleRegister\n\n  const handleLogin = async (email, pass, e) => {\n    e.preventDefault();\n    setRegSuccess(false);\n\n    setFieldsEmpty(false);\n    setAccountNotExists(false);\n\n    setLoginFail(false);\n    setLoginLoading(false);\n    setInvalidEmail(false);\n\n    if (email === \"\" || pass === \"\") {\n      setFieldsEmpty(true);\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setInvalidEmail(true);\n      return;\n    }\n\n    setLoginLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: email,\n    });\n\n    if (existingEmail.data[\"data\"] === null) {\n      setAccountNotExists(true);\n      setLoginLoading(false);\n      return;\n    }\n\n    const response = await axios.post(`${url}users/login`, {\n      email: email,\n      pass: pass,\n    });\n\n    if (response.data[\"data\"] === null) {\n      setLoginLoading(false);\n      setLoginFail(true);\n      return;\n    }\n    setCurrentUser(response.data[\"data\"]);\n    setLoginLoading(false);\n    setIsLoggedIn(true);\n  }; //end of handleLogin\n\n  const validateEmail = (email) => {\n    let re =\n      /[a-zA-Z0-9!@#$%&'*+'-=]+@[a-zA-Z0-9!@#$%&'*+'-=]+\\.[a-zA-Z0-9!@#$%&'*+'-=]+/;\n    return re.test(email);\n  };\n  //Google\n  const clientId =\n    \"768770191011-bm2rl6eidg2nmg84615oq9qp7rsg0ms9.apps.googleusercontent.com\";\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const onLoginSuccess = async (res) => {\n    console.log(res.profileObj);\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n    setLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: res.profileObj.email,\n    });\n\n    if (existingEmail.data.data !== null) {\n      console.log(existingEmail.data.data);\n      setCurrentUser(existingEmail.data.data);\n      setIsLoggedIn(true);\n      setLoading(false);\n      setShowloginButton(false);\n    } else if (existingEmail.data.data === null) {\n      console.log(\"does not exist\");\n      setShowloginButton(true);\n      setIsLoggedIn(false);\n      setLoading(false);\n      setEmailInput(res.profileObj.email);\n      setNameInput(res.profileObj.givenName);\n      window.location = \"./#/register\";\n    }\n\n    setShowlogoutButton(true);\n  };\n\n  const onLoginFailure = (res) => {\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    setIsLoggedIn(false);\n    setCurrentUser();\n  };\n\n  const handleLogout = () => {\n    setCurrentUser();\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      {loading ? (\n        <div className=\"loading-container w-50 text-center\">\n          <CircularProgress />\n        </div>\n      ) : (\n        <Box className=\"container main-container m-auto p-3 dark-border text\">\n          {fieldsEmpty && (\n            <Alert\n              severity=\"error\"\n              onClose={() => {\n                setFieldsEmpty(false);\n              }}\n            >\n              Please fill out all fields{\" \"}\n            </Alert>\n          )}\n          {regSuccess && (\n            <Alert\n              severity=\"success\"\n              onClose={() => {\n                setRegSuccess(false);\n              }}\n            >\n              Registration successful\n            </Alert>\n          )}\n          {\n            <Routes>\n              {isLoggedIn ? (\n                <Route path=\"/\" element={<Navigate to=\"/shop\" />} />\n              ) : (\n                <Route\n                  path=\"/\"\n                  element={\n                    <Login\n                      handleLogin={handleLogin}\n                      loginLoading={loginLoading}\n                      accountNotExists={accountNotExists}\n                      setAccountNotExists={setAccountNotExists}\n                      loginFail={loginFail}\n                      setLoginFail={setLoginFail}\n                      invalidEmail={invalidEmail}\n                      setInvalidEmail={setInvalidEmail}\n                      setFieldsEmpty={setFieldsEmpty}\n                      showloginButton={showloginButton}\n                      clientId={clientId}\n                      onLoginSuccess={onLoginSuccess}\n                      onLoginFailure={onLoginFailure}\n                      onSignoutSuccess={onSignoutSuccess}\n                      showlogoutButton={showlogoutButton}\n                    />\n                  }\n                />\n              )}\n              {justRegistered ? (\n                <Route path=\"/register\" element={<Navigate to=\"/\" />} />\n              ) : (\n                <Route\n                  path=\"/register\"\n                  element={\n                    <Register\n                      handleRegister={handleRegister}\n                      regLoading={regLoading}\n                      invalidRegister={invalidRegister}\n                      setInvalidRegister={setInvalidRegister}\n                      passwordMismatch={passwordMismatch}\n                      setPasswordMismatch={setPasswordMismatch}\n                      emailExists={emailExists}\n                      setEmailExists={setEmailExists}\n                      fieldsEmpty={fieldsEmpty}\n                      setFieldsEmpty={setFieldsEmpty}\n                      nameInput={nameInput}\n                      setNameInput={setNameInput}\n                      emailInput={emailInput}\n                      setEmailInput={setEmailInput}\n                      passInput={passInput}\n                      setPassInput={setPassInput}\n                      passConfirmInput={passConfirmInput}\n                      setPassConfirmInput={setPassConfirmInput}\n                    />\n                  }\n                />\n              )}\n              {isLoggedIn ? (\n                <Route\n                  path=\"/shop\"\n                  element={\n                    <Shop\n                      currentUser={currentUser}\n                      fruits={fruits}\n                      setFruits={setFruits}\n                      clientId={clientId}\n                      showlogoutButton={showlogoutButton}\n                      onSignoutSuccess={onSignoutSuccess}\n                      handleLogout={handleLogout}\n                    />\n                  }\n                />\n              ) : (\n                <Route path=\"/shop\" element={<Navigate to=\"/\" />} />\n              )}\n            </Routes>\n          }\n        </Box>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"g-signin\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}