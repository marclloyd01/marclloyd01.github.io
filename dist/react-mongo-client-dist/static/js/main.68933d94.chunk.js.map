{"version":3,"sources":["components/Login.js","components/Register.js","components/Counter.js","components/RowFruits.js","components/TransactionRow.js","components/Transaction.js","components/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleLogin","loginLoading","loginFail","handleCloseLog","invalidEmail","handleCloseEmail","useState","emailInputLogin","setEmailInputLogin","passInputLogin","setPassInputLogin","showPass","setShowPass","Box","className","onClick","type","placeholder","value","onChange","e","target","checked","id","htmlFor","to","pathname","Register","handleRegister","regLoading","regSuccess","handleCloseReg","invalidRegister","handleInvalidRegister","handleInvalidRegisterClose","passwordMismatch","setPasswordMismatch","emailInput","setEmailInput","passInput","setPassInput","passConfirmInput","setPassConfirmInput","nameInput","setNameInput","Alert","severity","onClose","Counter","handleChangeCount","fruitCount","FormControl","TextField","size","inputProps","min","label","parseInt","RowFruits","fruitItem","fruitPrice","handleRemove","handleCount","fruitTotal","count","setCount","ListItem","divider","secondaryAction","IconButton","number","TransactionRow","item","price","totalPrice","Transaction","data","userName","List","items","length","map","index","finalBill","Shop","currentUser","fruits","url","handleBuy","a","key","showLoading","total","cartFruits","axios","post","name","userId","_id","result","insertedId","get","transaction","setTransactionItems","showTransaction","selectedFruit","setSelectedFruit","setCartFruits","alertState","setAlertState","transactionState","transactionItems","loading","fruitRemove","filteredFruit","filter","fruit","console","log","mappedFruits","InputLabel","Select","sx","display","labelId","MenuItem","Button","variant","select","find","itemObject","handleAddFruit","CircularProgress","App","setFruits","setLoading","setRegLoading","setRegSuccess","setInvalidRegister","setLoginFail","setLoginLoading","setInvalidEmail","setCurrentUser","getAllFruits","response","useEffect","email","pass","validateEmail","handleFailedLogin","handleSuccessLogin","handleInvalidEmail","window","location","replace","test","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68933d94.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\nconst Login = ({\r\n  handleLogin,\r\n  loginLoading,\r\n  loginFail,\r\n  handleCloseLog,\r\n  invalidEmail,\r\n  handleCloseEmail,\r\n}) => {\r\n  const [emailInputLogin, setEmailInputLogin] = useState(\"\");\r\n  const [passInputLogin, setPassInputLogin] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <Box className=\"\">\r\n      {loginFail ? (\r\n        <Box className=\"alert-box bg-light-red p-3\">\r\n          Login failed\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleCloseLog();\r\n            }}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {invalidEmail ? (\r\n        <Box className=\"alert-box bg-light-red p-3\">\r\n          Invalid Email Address\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleCloseEmail();\r\n            }}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {loginLoading ? (\r\n        <Box className=\"alert-box p-3 bg-primary text-white\">Logging in...</Box>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Box className=\"\">\r\n        <h2>Login</h2>\r\n        <label className=\"h5\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Email\"\r\n          value={emailInputLogin}\r\n          onChange={(e) => {\r\n            setEmailInputLogin(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5\">Password</label>\r\n        <input\r\n          type={showPass ? \"text\" : \"password\"}\r\n          className=\"form-control\"\r\n          placeholder=\"Password\"\r\n          value={passInputLogin}\r\n          onChange={(e) => {\r\n            setPassInputLogin(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={showPass}\r\n          onChange={() => {\r\n            setShowPass(!showPass);\r\n          }}\r\n          id=\"passCheckBox\"\r\n        />\r\n        <label htmlFor=\"passCheckBox\">Show password</label>\r\n        <button\r\n          className=\"btn text-white login-register-button my-2 d-block w-100\"\r\n          onClick={(e) => {\r\n            handleLogin(emailInputLogin, passInputLogin);\r\n          }}\r\n        >\r\n          Login\r\n        </button>\r\n        <Link to={{ pathname: \"./register\" }} className=\"d-block\">\r\n          Don't have an account? Register here\r\n        </Link>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nconst Register = ({\r\n  handleRegister,\r\n  regLoading,\r\n  regSuccess,\r\n  handleCloseReg,\r\n  handleInvalidRegister,\r\n  invalidRegister,\r\n  handleInvalidRegisterClose,\r\n  passwordMismatch,\r\n  setPasswordMismatch,\r\n}) => {\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passInput, setPassInput] = useState(\"\");\r\n  const [passConfirmInput, setPassConfirmInput] = useState(\"\");\r\n\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {regLoading ? (\r\n        <div className=\"alert-box bg-primary p-3 text-white\">\r\n          Registering...\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {regSuccess ? (\r\n        <div className=\"alert-box bg-light-green p-3\">\r\n          Registration successful\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleCloseReg();\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {invalidRegister ? (\r\n        <div className=\"alert-box bg-light-red p-3\">\r\n          Invalid Email Address\r\n          <FaTimes\r\n            className=\"align-right-icon\"\r\n            onClick={() => {\r\n              handleInvalidRegisterClose();\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <h2>Register</h2>\r\n      <label className=\"h5 d-block\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Name\"\r\n        value={nameInput}\r\n        onChange={(e) => {\r\n          setNameInput(e.target.value);\r\n        }}\r\n      />\r\n      <label className=\"h5 mt-2\">Email</label>\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control\"\r\n        placeholder=\"Email\"\r\n        value={emailInput}\r\n        onChange={(e) => {\r\n          setEmailInput(e.target.value);\r\n        }}\r\n      />\r\n      <label className=\"h5 mt-2\">Password</label>\r\n      <input\r\n        type={showPass ? \"text\" : \"password\"}\r\n        className=\"form-control\"\r\n        placeholder=\"Password\"\r\n        value={passInput}\r\n        onChange={(e) => {\r\n          setPassInput(e.target.value);\r\n        }}\r\n      />\r\n      <label className=\"h5 mt-2\">Confirm Password</label>\r\n      <input\r\n        type={showPass ? \"text\" : \"password\"}\r\n        className=\"form-control\"\r\n        placeholder=\"Password\"\r\n        value={passConfirmInput}\r\n        onChange={(e) => {\r\n          setPassConfirmInput(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        className=\"mt-2\"\r\n        type=\"checkbox\"\r\n        checked={showPass}\r\n        onChange={() => {\r\n          setShowPass(!showPass);\r\n        }}\r\n        id=\"passCheckBox\"\r\n      />\r\n      <label htmlFor=\"passCheckBox\">Show password</label>\r\n      {passwordMismatch ? (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"my-3\"\r\n          onClose={() => {\r\n            setPasswordMismatch(false);\r\n          }}\r\n        >\r\n          Passwords do not match\r\n        </Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Link to={{ pathname: \"\" }}>\r\n        <button\r\n          className=\"btn text-white login-register-button my-2 d-block w-100\"\r\n          onClick={() => {\r\n            handleRegister(emailInput, passInput, nameInput, passConfirmInput);\r\n          }}\r\n        >\r\n          Register\r\n        </button>\r\n      </Link>\r\n      <Link to={{ pathname: \"/\" }}>Have an account? Login here</Link>\r\n      {/* <button\r\n        onClick={() => {\r\n          console.log(emailInput, passInput, nameInput);\r\n        }}\r\n      >\r\n        test\r\n      </button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst Counter = ({ handleChangeCount, fruitCount }) => {\r\n  return (\r\n    <FormControl>\r\n      <TextField\r\n        size=\"small\"\r\n        inputProps={{ min: 1 }}\r\n        type=\"number\"\r\n        label=\"Count\"\r\n        id=\"select-count\"\r\n        value={fruitCount}\r\n        onChange={(e) => {\r\n          handleChangeCount(parseInt(e.target.value, 10));\r\n        }}\r\n      ></TextField>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst RowFruits = ({\r\n  fruitItem,\r\n  fruitPrice,\r\n  handleRemove,\r\n  fruitCount,\r\n  handleCount,\r\n  fruitTotal,\r\n}) => {\r\n  const handleChangeCount = (number) => {\r\n    setCount(number);\r\n    handleCount(fruitItem, fruitPrice, number);\r\n  };\r\n  const [count, setCount] = useState(fruitCount);\r\n\r\n  return (\r\n    <ListItem\r\n      divider={true}\r\n      secondaryAction={\r\n        <IconButton\r\n          onClick={() => {\r\n            handleRemove(fruitItem);\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <Box className=\"col-3 text-center\">{fruitItem}</Box>\r\n      <Box className=\"col-3 text-center\">{fruitPrice}</Box>\r\n      <Counter\r\n        count={count}\r\n        handleChangeCount={handleChangeCount}\r\n        fruitItem={fruitItem}\r\n        fruitCount={fruitCount}\r\n      />\r\n      <Box className=\"col-3 text-center\">{fruitPrice * count}</Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default RowFruits;\r\n","import React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst TransactionRow = ({ item }) => {\r\n  return (\r\n    //   TODO: use tables instead\r\n    <>\r\n      <ListItem divider={true}>\r\n        <Box className=\"col-3 text-center\">{item.item}</Box>\r\n        <Box className=\"col-3 text-center\">{item.price}</Box>\r\n        <Box className=\"col-3 text-center\">{item.count}</Box>\r\n        <Box className=\"col-3 text-center\">{item.totalPrice}</Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import React from \"react\";\r\n\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nconst Transaction = ({ data }) => {\r\n  return (\r\n    <>\r\n      User: {data.userName}\r\n      {/* {data.userId} */}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Count</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\">\r\n            <strong>{data.finalBill}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport RowFruits from \"./RowFruits\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Shop = ({ currentUser, fruits }) => {\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const handleBuy = async () => {\r\n    showLoading(true);\r\n    let total = 0;\r\n    for (var key in cartFruits) {\r\n      total += cartFruits[key].totalPrice;\r\n    }\r\n    const result = await axios.post(`${url}transactions`, {\r\n      name: currentUser.name,\r\n      userId: currentUser._id,\r\n      items: cartFruits,\r\n      total: total,\r\n    });\r\n    const id = result.data.data.insertedId;\r\n    const transaction = await axios.get(`${url}transactions/${id}`);\r\n    setTransactionItems(transaction.data);\r\n    showTransaction(true);\r\n    showLoading(false);\r\n  };\r\n\r\n  const [selectedFruit, setSelectedFruit] = useState(\"apple\");\r\n  const [cartFruits, setCartFruits] = useState([]);\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [transactionState, showTransaction] = useState(false);\r\n  const [transactionItems, setTransactionItems] = useState([]);\r\n  const [loading, showLoading] = useState(false);\r\n\r\n  const handleRemove = (fruitRemove) => {\r\n    let filteredFruit = cartFruits.filter(\r\n      (fruit) => fruit.item !== fruitRemove\r\n    );\r\n    console.log(filteredFruit);\r\n    console.log(fruitRemove);\r\n\r\n    setCartFruits(filteredFruit);\r\n  };\r\n  const handleRemoveAll = () => {\r\n    setCartFruits([]);\r\n  };\r\n\r\n  const handleAddFruit = (select) => {\r\n    const item = fruits.find((fruit) => fruit.item === select);\r\n    console.log(item.price);\r\n\r\n    //check if dupe\r\n    // for each fruit in cart\r\n\r\n    for (var key in cartFruits) {\r\n      if (select === cartFruits[key].item) {\r\n        setAlertState(true);\r\n        return; //reject action here\r\n      }\r\n    }\r\n    setAlertState(false);\r\n\r\n    const itemObject = {\r\n      item: select,\r\n      price: item.price,\r\n      count: 1,\r\n      totalPrice: item.price,\r\n    };\r\n    console.log(itemObject);\r\n\r\n    //only works for adding new items\r\n    setCartFruits([...cartFruits, itemObject]);\r\n  };\r\n  const handleCount = (fruitItem, fruitPrice, count) => {\r\n    const mappedFruits = cartFruits.map((fruit) =>\r\n      fruit.item === fruitItem\r\n        ? { ...fruit, count: count, totalPrice: fruitPrice * count }\r\n        : fruit\r\n    );\r\n    setCartFruits(mappedFruits);\r\n    console.log(mappedFruits);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alertState ? (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"mb-3\"\r\n          onClose={() => {\r\n            setAlertState(false);\r\n          }}\r\n        >\r\n          Fruit already added\r\n        </Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Box className=\"row justify-content-center w-50 m-auto\">\r\n        <Box>Hello {currentUser.name}</Box>\r\n        <FormControl className=\"col-9\" size=\"small\">\r\n          <InputLabel id=\"select-label-fruits\">Fruits</InputLabel>\r\n          {/* checks if fruits are loaded from database */}\r\n          {fruits.length > 0 ? (\r\n            <>\r\n              <Select\r\n                sx={{ display: \"inline\" }}\r\n                labelId=\"select-label-fruits\"\r\n                id=\"select-fruits\"\r\n                value={selectedFruit}\r\n                label=\"Fruits\"\r\n                onChange={(e) => {\r\n                  setSelectedFruit(e.target.value);\r\n                }}\r\n              >\r\n                {fruits.map((fruit, index) => (\r\n                  <MenuItem key={index} value={fruit.item}>\r\n                    {fruit.item}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"col-1\"\r\n          onClick={() => {\r\n            handleAddFruit(selectedFruit);\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box className=\"row \">\r\n        <List>\r\n          <ListItem\r\n            divider={true}\r\n            secondaryAction={\r\n              cartFruits.length > 0 ? (\r\n                <IconButton\r\n                  onClick={() => {\r\n                    handleRemoveAll();\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          >\r\n            <Box className=\"col-3 text-center\">Item</Box>\r\n            <Box className=\"col-3 text-center\">Price</Box>\r\n            <Box className=\"col-3 text-center\">Count</Box>\r\n\r\n            <Box className=\"col-3 text-center\">Total</Box>\r\n          </ListItem>\r\n          {cartFruits.length > 0\r\n            ? cartFruits.map((fruit, index) => (\r\n                <RowFruits\r\n                  fruitItem={fruit.item}\r\n                  fruitPrice={fruit.price}\r\n                  fruitCount={fruit.count}\r\n                  fruitTotal={fruit.totalPrice}\r\n                  key={index}\r\n                  handleRemove={handleRemove}\r\n                  handleCount={handleCount}\r\n                />\r\n              ))\r\n            : \"No Items\"}\r\n        </List>\r\n      </Box>\r\n      <Box className=\"\">\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleBuy();\r\n          }}\r\n        >\r\n          Buy\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {transactionState ? (\r\n          <Transaction data={transactionItems.data} />\r\n        ) : loading ? (\r\n          <div className=\"text-center\">\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import axios from \"axios\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Shop from \"./components/Shop\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport Box from \"@mui/material/Box\";\n\nfunction App() {\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\n\n  const [fruits, setFruits] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [regLoading, setRegLoading] = useState(false);\n  const [regSuccess, setRegSuccess] = useState(false);\n  const [invalidRegister, setInvalidRegister] = useState(false);\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n\n  const [loginFail, setLoginFail] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  const getAllFruits = async () => {\n    // Till the data is fetched using API\n    // the Loading page will show.\n    setLoading(true);\n\n    // Await will make it wait until that\n    // promise settles and return its result\n\n    const response = await axios.get(`${url}items`);\n\n    setFruits(response.data.data);\n    setLoading(false);\n  };\n\n  //runs on startup\n  useEffect(() => {\n    getAllFruits();\n  }, []);\n\n  const handleRegister = async (email, pass, name, passConfirmInput) => {\n    setRegSuccess(false);\n    setRegLoading(true);\n    setInvalidRegister(false);\n    setPasswordMismatch(false);\n    if (validateEmail(email)) {\n      if (pass !== passConfirmInput) {\n        setRegLoading(false);\n        setPasswordMismatch(true);\n        return;\n      }\n\n      const response = await axios.post(`${url}users`, {\n        name: name,\n        pass: pass,\n        email: email,\n      });\n\n      setRegLoading(false);\n      setRegSuccess(true);\n      setInvalidRegister(false);\n      setPasswordMismatch(false);\n    } else handleInvalidRegister();\n  };\n\n  const handleCloseReg = () => {\n    setRegSuccess(false);\n  };\n  const handleInvalidRegister = () => {\n    setRegLoading(false);\n    setInvalidRegister(true);\n    setRegSuccess(false);\n  };\n  const handleInvalidRegisterClose = () => {\n    setInvalidRegister(false);\n  };\n\n  const handleLogin = async (email, pass) => {\n    setLoginFail(false);\n    setLoginLoading(true);\n    setInvalidEmail(false);\n\n    if (validateEmail(email)) {\n      const response = await axios.post(`${url}users/login`, {\n        email: email,\n        pass: pass,\n      });\n      response.data.data === null\n        ? handleFailedLogin()\n        : handleSuccessLogin(response.data);\n    } else handleInvalidEmail();\n  };\n\n  const handleInvalidEmail = () => {\n    setLoginLoading(false);\n    setInvalidEmail(true);\n    setLoginFail(false);\n  };\n\n  const handleFailedLogin = () => {\n    console.log(\"no account found\");\n    setCurrentUser(null);\n    setLoginLoading(false);\n    setInvalidEmail(false);\n    setLoginFail(true);\n  };\n\n  const handleSuccessLogin = (data) => {\n    setLoginLoading(false);\n    setLoginFail(false);\n    setInvalidEmail(false);\n\n    setCurrentUser(data[\"data\"]);\n    window.location.replace(\"./#/shop\");\n  };\n\n  const handleCloseLog = () => {\n    setLoginFail(false);\n  };\n  const handleCloseEmail = () => {\n    //login function handling\n    setInvalidEmail(false);\n  };\n\n  const validateEmail = (email) => {\n    let re =\n      /[a-zA-Z0-9!@#$%&'*+'-=]+@[a-zA-Z0-9!@#$%&'*+'-=]+\\.[a-zA-Z0-9!@#$%&'*+'-=]+/;\n    return re.test(email);\n  };\n  return (\n    <Router>\n      <Box className=\"container-sm w-50 my-2 p-3 dark-border text\">\n        {loading ? (\n          <div className=\"text-center\">\n            <CircularProgress />\n          </div>\n        ) : (\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <Login\n                  handleLogin={handleLogin}\n                  setRegSuccess={setRegSuccess}\n                  loginLoading={loginLoading}\n                  loginFail={loginFail}\n                  invalidEmail={invalidEmail}\n                  handleCloseLog={handleCloseLog}\n                  handleCloseEmail={handleCloseEmail}\n                />\n              }\n            />\n            <Route\n              path=\"/register\"\n              element={\n                <Register\n                  handleRegister={handleRegister}\n                  regLoading={regLoading}\n                  handleCloseReg={handleCloseReg}\n                  regSuccess={regSuccess}\n                  handleInvalidRegister={handleInvalidRegister}\n                  invalidRegister={invalidRegister}\n                  handleInvalidRegisterClose={handleInvalidRegisterClose}\n                  passwordMismatch={passwordMismatch}\n                  setPasswordMismatch={setPasswordMismatch}\n                />\n              }\n            />\n            <Route\n              path=\"/shop\"\n              element={<Shop currentUser={currentUser} fruits={fruits} />}\n            />\n          </Routes>\n        )}\n\n        {/* <button onClick={() => window.location.replace(\"./#/shop\")}>\n          go to shop test\n        </button> */}\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}