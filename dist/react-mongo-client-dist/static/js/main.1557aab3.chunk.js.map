{"version":3,"sources":["components/Login.js","components/Register.js","components/Counter.js","components/RowFruits.js","components/TransactionRow.js","components/Transaction.js","components/BillModal.js","components/Shop.js","components/NavBar.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleLogin","loginLoading","loginFail","invalidEmail","accountNotExists","setAccountNotExists","setLoginFail","setInvalidEmail","setFieldsEmpty","showloginButton","clientId","onLoginSuccess","onLoginFailure","useState","emailInputLogin","setEmailInputLogin","passInputLogin","setPassInputLogin","showPass","setShowPass","Box","className","Alert","severity","onClose","Input","fullWidth","placeholder","value","onChange","e","target","type","endAdornment","InputAdornment","position","onClick","IconButton","Button","variant","to","pathname","onSuccess","onFailure","cookiePolicy","Register","handleRegister","regLoading","invalidRegister","setInvalidRegister","passwordMismatch","setPasswordMismatch","emailExists","setEmailExists","nameInput","setNameInput","emailInput","setEmailInput","passInput","setPassInput","passConfirmInput","setPassConfirmInput","Counter","handleChangeCount","fruitCount","transactionState","FormControl","TextField","InputProps","disabled","size","inputProps","min","label","id","isNaN","parseInt","RowFruits","fruitItem","fruitPrice","handleRemove","handleCount","fruitTotal","count","setCount","ListItem","divider","secondaryAction","number","TransactionRow","item","price","totalPrice","Transaction","data","showTransaction","handleBuy","name","List","items","length","map","index","total","BillModal","handleCloseModal","userName","_id","finalBill","Shop","currentUser","fruits","setFruits","sessionFruits","selectedFruit","setSelectedFruit","cartFruits","setCartFruits","alertState","setAlertState","loading","showLoading","transactionItems","setTransactionItems","serverTransaction","setServerTransaction","url","fruitRemove","backFruit","filter","fruit","filteredFruit","itemObject","mappedFruits","a","setModalOpen","axios","post","userId","result","insertedId","get","transaction","modalOpen","shopLoading","setShopLoading","getAllFruits","response","useEffect","CircularProgress","Modal","open","sx","width","top","left","transform","bgcolor","boxShadow","padding","InputLabel","Select","labelId","MenuItem","select","find","filterItem","handleAddFruit","key","tempTransaction","handleConfirm","NavBar","showlogoutButton","onSignoutSuccess","handleLogout","buttonText","onLogoutSuccess","Home","transactionList","setTransactionList","homeLoading","setHomeLoading","getList","list","App","setLoading","setRegLoading","regSuccess","setRegSuccess","justRegistered","setJustRegistered","fieldsEmpty","setLoginLoading","isLoggedIn","setIsLoggedIn","setCurrentUser","email","pass","preventDefault","validateEmail","status","test","setShowloginButton","setShowlogoutButton","res","console","log","profileObj","existingEmail","givenName","window","location","alert","clear","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1557aab3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst Login = ({\r\n  handleLogin,\r\n  loginLoading,\r\n  loginFail,\r\n  invalidEmail,\r\n  accountNotExists,\r\n  setAccountNotExists,\r\n  setLoginFail,\r\n  setInvalidEmail,\r\n  setFieldsEmpty,\r\n  showloginButton,\r\n  clientId,\r\n  onLoginSuccess,\r\n  onLoginFailure,\r\n}) => {\r\n  const [emailInputLogin, setEmailInputLogin] = useState(\"\");\r\n  const [passInputLogin, setPassInputLogin] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <Box className=\"\">\r\n      {accountNotExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setAccountNotExists(false);\r\n          }}\r\n        >\r\n          Account does not exist\r\n        </Alert>\r\n      )}\r\n      {loginFail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setLoginFail(false);\r\n          }}\r\n        >\r\n          Login failed\r\n        </Alert>\r\n      )}\r\n      {invalidEmail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidEmail(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      {loginLoading && <Alert severity=\"info\">Logging in...</Alert>}\r\n      <form>\r\n        <h2>Login</h2>\r\n        <label className=\"h5\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Email\"\r\n          value={emailInputLogin}\r\n          onChange={(e) => {\r\n            setEmailInputLogin(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInputLogin}\r\n          onChange={(e) => {\r\n            setPassInputLogin(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          className=\"my-3\"\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleLogin(emailInputLogin, passInputLogin, e);\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Box className=\"d-flex justify-content-between\">\r\n          <Link\r\n            to={{ pathname: \"/register\" }}\r\n            onClick={() => {\r\n              setFieldsEmpty();\r\n            }}\r\n          >\r\n            Don't have an account? Register here\r\n          </Link>\r\n\r\n          {showloginButton ? (\r\n            <GoogleLogin\r\n              clientId={clientId}\r\n              onSuccess={onLoginSuccess}\r\n              onFailure={onLoginFailure}\r\n              cookiePolicy={\"single_host_origin\"}\r\n              // isSignedIn={true}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Register = ({\r\n  handleRegister,\r\n  regLoading,\r\n  invalidRegister,\r\n  setInvalidRegister,\r\n  passwordMismatch,\r\n  setPasswordMismatch,\r\n  emailExists,\r\n  setEmailExists,\r\n  setFieldsEmpty,\r\n  nameInput,\r\n  setNameInput,\r\n  emailInput,\r\n  setEmailInput,\r\n  passInput,\r\n  setPassInput,\r\n  passConfirmInput,\r\n  setPassConfirmInput,\r\n}) => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {passwordMismatch && (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"my-3\"\r\n          onClose={() => {\r\n            setPasswordMismatch(false);\r\n          }}\r\n        >\r\n          Passwords do not match\r\n        </Alert>\r\n      )}\r\n      {emailExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setEmailExists(false);\r\n          }}\r\n        >\r\n          Email already exists{\" \"}\r\n        </Alert>\r\n      )}\r\n      {regLoading && <Alert severity=\"info\"> Registering... </Alert>}\r\n      {invalidRegister && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidRegister(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      <h2>Register</h2>\r\n      <form>\r\n        <label className=\"h5 d-block\">Name</label>\r\n        {/* <InputLabel>Name</InputLabel> */}\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Name\"\r\n          value={nameInput}\r\n          onChange={(e) => {\r\n            setNameInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={emailInput}\r\n          onChange={(e) => {\r\n            setEmailInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInput}\r\n          onChange={(e) => {\r\n            setPassInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Confirm Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passConfirmInput}\r\n          onChange={(e) => {\r\n            setPassConfirmInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          className=\"my-3\"\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          // sx={{ backgroundColor: \"#3f2d88\" }}\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleRegister(\r\n              emailInput,\r\n              passInput,\r\n              nameInput,\r\n              passConfirmInput,\r\n              e\r\n            );\r\n          }}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n\r\n      <Link\r\n        to={{ pathname: \"/login\" }}\r\n        onClick={() => {\r\n          setFieldsEmpty();\r\n        }}\r\n      >\r\n        Have an account? Login here\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst Counter = ({ handleChangeCount, fruitCount, transactionState }) => {\r\n  return (\r\n    <FormControl>\r\n      <TextField\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"start\">kg</InputAdornment>,\r\n        }}\r\n        disabled={transactionState}\r\n        size=\"small\"\r\n        inputProps={{ min: 1 }}\r\n        type=\"tel\"\r\n        label=\"Kilo\"\r\n        id=\"select-count\"\r\n        value={isNaN(fruitCount) ? 0 : fruitCount}\r\n        onChange={(e) => {\r\n          handleChangeCount(parseInt(e.target.value, 10));\r\n        }}\r\n      ></TextField>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst RowFruits = ({\r\n  fruitItem,\r\n  fruitPrice,\r\n  handleRemove,\r\n  fruitCount,\r\n  handleCount,\r\n  fruitTotal,\r\n  transactionState,\r\n}) => {\r\n  const handleChangeCount = (number) => {\r\n    if (isNaN(number)) {\r\n      number = 0;\r\n    }\r\n    setCount(number);\r\n    handleCount(fruitItem, fruitPrice, number);\r\n  };\r\n  const [count, setCount] = useState(fruitCount);\r\n\r\n  return (\r\n    <ListItem\r\n      divider={true}\r\n      secondaryAction={\r\n        <IconButton\r\n          disabled={transactionState}\r\n          onClick={() => {\r\n            handleRemove(fruitItem);\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <Box className=\"col-3 text-center\">{fruitItem}</Box>\r\n      <Box className=\"col-3 text-center\"> ₱{fruitPrice}</Box>\r\n      <Counter\r\n        transactionState={transactionState}\r\n        count={count}\r\n        handleChangeCount={handleChangeCount}\r\n        fruitItem={fruitItem}\r\n        fruitCount={fruitCount}\r\n      />\r\n      <Box className=\"col-3 text-center\">\r\n        ₱{isNaN(count) ? \"\" : fruitPrice * count}\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default RowFruits;\r\n","import React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst TransactionRow = ({ item }) => {\r\n  return (\r\n    //   TODO: use tables instead\r\n    <>\r\n      <ListItem divider={true}>\r\n        <Box className=\"col-3 text-center\">{item.item}</Box>\r\n        <Box className=\"col-3 text-center\"> ₱{item.price}</Box>\r\n        <Box className=\"col-3 text-center\">{item.count} kg</Box>\r\n        <Box className=\"col-3 text-center\"> ₱{item.totalPrice}</Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import React from \"react\";\r\n\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Transaction = ({ data, showTransaction, handleBuy }) => {\r\n  return (\r\n    <>\r\n      <h2>Transaction</h2>\r\n      User: {data.name}\r\n      {/* {data.userId} */}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong> ₱{data.total}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"d-flex justify-content-between\">\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            showTransaction(false);\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleBuy();\r\n          }}\r\n        >\r\n          Buy\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst BillModal = ({ data, handleCloseModal }) => {\r\n  return (\r\n    <Box>\r\n      <h2>Your Bill</h2>\r\n      User: {data.userName}\r\n      <br />\r\n      Transaction Id: {data._id}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong>{data.finalBill}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"\">\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth={true}\r\n          onClick={() => {\r\n            handleCloseModal();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BillModal;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport RowFruits from \"./RowFruits\";\r\nimport Transaction from \"./Transaction\";\r\nimport BillModal from \"./BillModal\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst Shop = ({ currentUser, fruits, setFruits }) => {\r\n  const [sessionFruits, setSessionFruits] = useState(fruits);\r\n\r\n  const [selectedFruit, setSelectedFruit] = useState(\"default\");\r\n\r\n  const [cartFruits, setCartFruits] = useState([]);\r\n\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [transactionState, showTransaction] = useState(false);\r\n  const [loading, showLoading] = useState(false);\r\n\r\n  const [transactionItems, setTransactionItems] = useState([]);\r\n  const [serverTransaction, setServerTransaction] = useState([]);\r\n\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const handleConfirm = () => {\r\n    let total = 0;\r\n    for (var key in cartFruits) {\r\n      total += cartFruits[key].totalPrice;\r\n    }\r\n    const tempTransaction = {\r\n      name: currentUser.name,\r\n      userId: currentUser._id,\r\n      items: cartFruits,\r\n      total: total,\r\n    };\r\n    setTransactionItems(tempTransaction);\r\n\r\n    showTransaction(true);\r\n  };\r\n\r\n  const handleRemove = (fruitRemove) => {\r\n    let backFruit = sessionFruits.filter((fruit) => fruit.item === fruitRemove);\r\n    let filteredFruit = cartFruits.filter(\r\n      (fruit) => fruit.item !== fruitRemove\r\n    );\r\n    setCartFruits(filteredFruit);\r\n    const itemObject = backFruit[0];\r\n    setFruits([...fruits, itemObject]);\r\n  };\r\n  const handleRemoveAll = () => {\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n    // console.log(fruits);\r\n  };\r\n  const handleAddFruit = (select) => {\r\n    const item = fruits.find((fruit) => fruit.item === select);\r\n    const filterItem = fruits.filter((fruit) => fruit.item !== select);\r\n    // console.log(filterItem);\r\n    setFruits(filterItem);\r\n    setSelectedFruit(\"default\");\r\n\r\n    // //check if dupe\r\n    // // for each fruit in cart\r\n\r\n    // for (var key in cartFruits) {\r\n    //   if (select === cartFruits[key].item) {\r\n    //     setAlertState(true);\r\n    //     return; //reject action here\r\n    //   }\r\n    // }\r\n    // setAlertState(false);\r\n\r\n    const itemObject = {\r\n      item: select,\r\n      price: item.price,\r\n      count: 1,\r\n      totalPrice: item.price,\r\n    };\r\n\r\n    //only works for adding new items\r\n    setCartFruits([...cartFruits, itemObject]);\r\n  };\r\n\r\n  const handleCount = (fruitItem, fruitPrice, count) => {\r\n    const mappedFruits = cartFruits.map((fruit) =>\r\n      fruit.item === fruitItem\r\n        ? { ...fruit, count: count, totalPrice: fruitPrice * count }\r\n        : fruit\r\n    );\r\n    setCartFruits(mappedFruits);\r\n  };\r\n  const handleBuy = async () => {\r\n    setModalOpen(true);\r\n    showLoading(true);\r\n    const result = await axios.post(`${url}transactions`, {\r\n      name: transactionItems.name,\r\n      userId: transactionItems.userId,\r\n      items: transactionItems.items,\r\n      total: transactionItems.total,\r\n    });\r\n    const id = result.data.data.insertedId;\r\n    const transaction = await axios.get(`${url}transactions/${id}`);\r\n    // console.log(transaction.data.data);\r\n    setServerTransaction(transaction.data.data);\r\n    showLoading(false);\r\n  };\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n    showTransaction(false);\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n  };\r\n\r\n  const modalStyle = {\r\n    position: \"absolute\",\r\n    width: \"75%\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    padding: 4,\r\n  };\r\n\r\n  const [shopLoading, setShopLoading] = useState(false);\r\n  const getAllFruits = async () => {\r\n    // Till the data is fetched using API\r\n    // the Loading page will show.\r\n    setShopLoading(true);\r\n\r\n    // Await will make it wait until that\r\n    // promise settles and return its result\r\n\r\n    const response = await axios.get(`${url}items`);\r\n\r\n    setFruits(response.data.data);\r\n    setShopLoading(false);\r\n  };\r\n\r\n  //runs on startup\r\n  useEffect(() => {\r\n    getAllFruits();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-75 m-auto\">\r\n      {shopLoading ? (\r\n        <div className=\"loading-container w-50 text-center\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Modal open={modalOpen}>\r\n            <Box sx={modalStyle}>\r\n              {loading ? (\r\n                <div className=\"text-center\">\r\n                  <CircularProgress />\r\n                </div>\r\n              ) : (\r\n                <BillModal\r\n                  data={serverTransaction}\r\n                  handleCloseModal={handleCloseModal}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Modal>\r\n\r\n          {alertState ? (\r\n            <Alert\r\n              severity=\"error\"\r\n              className=\"mb-3\"\r\n              onClose={() => {\r\n                setAlertState(false);\r\n              }}\r\n            >\r\n              Fruit already added\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Box className=\"\">\r\n            <Box className=\"d-flex justify-content-between\">\r\n              <Box className=\"d-inline h2\">Shop</Box>\r\n            </Box>\r\n            <Box className=\"row justify-content-center\">\r\n              <Box className=\"\">Hello {currentUser.name}</Box>\r\n            </Box>\r\n            <Box className=\"row justify-content-center w-50 m-auto\">\r\n              <FormControl className=\"col-9\" size=\"small\">\r\n                <InputLabel id=\"select-label-fruits\">Fruits</InputLabel>\r\n                <Select\r\n                  disabled={\r\n                    fruits.length === 0 || transactionState ? true : false\r\n                  }\r\n                  labelId=\"select-label-fruits\"\r\n                  id=\"select-fruits\"\r\n                  value={selectedFruit}\r\n                  label=\"Fruits\"\r\n                  onChange={(e) => {\r\n                    setSelectedFruit(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem disabled value={\"default\"}>\r\n                    Select Fruit\r\n                  </MenuItem>\r\n                  {fruits.map((fruit, index) => (\r\n                    <MenuItem key={index} value={fruit.item}>\r\n                      {fruit.item}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                disabled={\r\n                  selectedFruit === \"default\" || transactionState ? true : false\r\n                }\r\n                variant=\"contained\"\r\n                className=\"col-1\"\r\n                onClick={() => {\r\n                  handleAddFruit(selectedFruit);\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          <Box className=\"row \">\r\n            <List>\r\n              <ListItem\r\n                divider={true}\r\n                secondaryAction={\r\n                  cartFruits.length > 0 && (\r\n                    <IconButton\r\n                      disabled={transactionState}\r\n                      onClick={() => {\r\n                        handleRemoveAll();\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  )\r\n                }\r\n              >\r\n                <Box className=\"col-3 text-center\">Item</Box>\r\n                <Box className=\"col-3 text-center\">Price</Box>\r\n                <Box className=\"col-3 text-center\">Kilo</Box>\r\n\r\n                <Box className=\"col-3 text-center\">Total</Box>\r\n              </ListItem>\r\n              {cartFruits.length > 0 ? (\r\n                cartFruits.map((fruit, index) => (\r\n                  <RowFruits\r\n                    transactionState={transactionState}\r\n                    fruitItem={fruit.item}\r\n                    fruitPrice={fruit.price}\r\n                    fruitCount={fruit.count}\r\n                    fruitTotal={fruit.totalPrice}\r\n                    key={index}\r\n                    handleRemove={handleRemove}\r\n                    handleCount={handleCount}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Box className=\" text-center\">No Fruits Selected</Box>\r\n              )}\r\n            </List>\r\n          </Box>\r\n          <Box className=\"justify-content-end d-flex\">\r\n            <Button\r\n              className=\"\"\r\n              disabled={\r\n                transactionState || cartFruits.length === 0 ? true : false\r\n              }\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                handleConfirm();\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            {transactionState && (\r\n              <Transaction\r\n                handleBuy={handleBuy}\r\n                data={transactionItems}\r\n                showTransaction={showTransaction}\r\n              />\r\n            )}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import { GoogleLogout } from \"react-google-login\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst NavBar = ({\r\n  showlogoutButton,\r\n  clientId,\r\n  onSignoutSuccess,\r\n  handleLogout,\r\n}) => {\r\n  return (\r\n    <nav className=\"bg-white border p-1 d-flex justify-content-between\">\r\n      <div>\r\n        <div className=\"d-inline-block\">\r\n          <Link to={{ pathname: \"/home\" }} className=\"nav-link text-nowrap\">\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <div className=\"d-inline-block\">\r\n          <Link to={{ pathname: \"/shop\" }} className=\"nav-link text-nowrap\">\r\n            Shop\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {showlogoutButton ? (\r\n        <GoogleLogout\r\n          clientId={clientId}\r\n          buttonText=\"Sign Out\"\r\n          onLogoutSuccess={onSignoutSuccess}\r\n        ></GoogleLogout>\r\n      ) : (\r\n        <Button\r\n          onClick={() => {\r\n            handleLogout();\r\n          }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nconst Home = ({ currentUser }) => {\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n  const [transactionList, setTransactionList] = useState([]);\r\n  const [homeLoading, setHomeLoading] = useState(false);\r\n\r\n  const getList = async () => {\r\n    setHomeLoading(true);\r\n    const id = currentUser._id;\r\n    const list = await axios.get(`${url}transactions/list/${id}`);\r\n    // console.log(list.data.data);\r\n    setHomeLoading(false);\r\n    setTransactionList(list.data.data);\r\n  };\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n  return (\r\n    <div className=\"mx-3\">\r\n      <h2>Home</h2>\r\n      {homeLoading ? (\r\n        <div className=\"loading-container w-50 text-center\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div className=\"w-75 m-auto\">\r\n          {transactionList.map((list) => {\r\n            return (\r\n              <div key={list._id} className=\"transaction-container \">\r\n                <h5>Item </h5>\r\n                <List>\r\n                  <ListItem divider={true}>\r\n                    <div className=\"col-3 text-center\">Item</div>\r\n                    <div className=\"col-3 text-center\">Price</div>\r\n                    <div className=\"col-3 text-center\">Kilo</div>\r\n                    <div className=\"col-3 text-center\">Total Price</div>\r\n                  </ListItem>\r\n                </List>\r\n                <List>\r\n                  {list.items.map((item) => {\r\n                    return (\r\n                      <>\r\n                        <ListItem divider={true}>\r\n                          <div key={item.item} className=\"col-3 text-center\">\r\n                            {item.item}\r\n                          </div>\r\n                          <div className=\"col-3 text-center\">₱{item.price}</div>\r\n                          <div className=\"col-3 text-center\">{item.count}</div>\r\n                          <div className=\"col-3 text-center\">\r\n                            ₱{item.totalPrice}\r\n                          </div>\r\n                        </ListItem>\r\n                      </>\r\n                    );\r\n                  })}\r\n                  <ListItem>\r\n                    <div className=\"col-3 text-center\">Final Bill</div>\r\n                    <div className=\"col-3 text-center\"></div>\r\n                    <div className=\"col-3 text-center\"></div>\r\n                    <div className=\"col-3 text-center\"></div>\r\n                  </ListItem>\r\n                </List>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Shop from \"./components/Shop\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport { Navigate } from \"react-router-dom\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport Alert from \"@mui/material/Alert\";\n\nfunction App() {\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\n\n  const [fruits, setFruits] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [regLoading, setRegLoading] = useState(false);\n  const [regSuccess, setRegSuccess] = useState(false);\n  const [justRegistered, setJustRegistered] = useState(false);\n\n  const [invalidRegister, setInvalidRegister] = useState(false);\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n  const [fieldsEmpty, setFieldsEmpty] = useState(false);\n\n  const [accountNotExists, setAccountNotExists] = useState(false);\n  const [loginFail, setLoginFail] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  //Register\n  const [nameInput, setNameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passInput, setPassInput] = useState(\"\");\n  const [passConfirmInput, setPassConfirmInput] = useState(\"\");\n\n  const handleRegister = async (email, pass, name, passConfirmInput, e) => {\n    e.preventDefault();\n\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n\n    //checks if fields are empty\n    if (email === \"\" || pass === \"\" || passConfirmInput === \"\" || name === \"\") {\n      setFieldsEmpty(true);\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setInvalidRegister(true);\n      return;\n    }\n\n    if (pass !== passConfirmInput) {\n      setPasswordMismatch(true);\n      return;\n    }\n    setRegLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: email,\n    });\n\n    if (existingEmail.data[\"data\"] !== null) {\n      setEmailExists(true);\n      setRegLoading(false);\n\n      return;\n    }\n\n    const response = await axios.post(`${url}users`, {\n      name: name,\n      pass: pass,\n      email: email,\n    });\n\n    if (response.status === 200) {\n      setRegLoading(false);\n      setRegSuccess(true);\n      setJustRegistered(true);\n      setJustRegistered(false);\n    }\n  }; // end of handleRegister\n\n  const handleLogin = async (email, pass, e) => {\n    e.preventDefault();\n    setRegSuccess(false);\n\n    setFieldsEmpty(false);\n    setAccountNotExists(false);\n\n    setLoginFail(false);\n    setLoginLoading(false);\n    setInvalidEmail(false);\n\n    if (email === \"\" || pass === \"\") {\n      setFieldsEmpty(true);\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setInvalidEmail(true);\n      return;\n    }\n\n    setLoginLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: email,\n    });\n\n    if (existingEmail.data[\"data\"] === null) {\n      setAccountNotExists(true);\n      setLoginLoading(false);\n      return;\n    }\n\n    const response = await axios.post(`${url}users/login`, {\n      email: email,\n      pass: pass,\n    });\n\n    if (response.data[\"data\"] === null) {\n      setLoginLoading(false);\n      setLoginFail(true);\n      return;\n    }\n    setCurrentUser(response.data[\"data\"]);\n    setLoginLoading(false);\n    setIsLoggedIn(true);\n  }; //end of handleLogin\n\n  const validateEmail = (email) => {\n    let re =\n      /[a-zA-Z0-9!@#$%&'*+'-=]+@[a-zA-Z0-9!@#$%&'*+'-=]+\\.[a-zA-Z0-9!@#$%&'*+'-=]+/;\n    return re.test(email);\n  };\n  //Google\n  const clientId =\n    \"768770191011-bm2rl6eidg2nmg84615oq9qp7rsg0ms9.apps.googleusercontent.com\";\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const onLoginSuccess = async (res) => {\n    console.log(res.profileObj);\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n    setLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: res.profileObj.email,\n    });\n\n    if (existingEmail.data.data !== null) {\n      console.log(existingEmail.data.data);\n      setCurrentUser(existingEmail.data.data);\n      setIsLoggedIn(true);\n      setLoading(false);\n      setShowloginButton(false);\n      setShowlogoutButton(true);\n    } else if (existingEmail.data.data === null) {\n      console.log(\"does not exist\");\n      setShowloginButton(true);\n      setIsLoggedIn(false);\n      setLoading(false);\n      setEmailInput(res.profileObj.email);\n      setNameInput(res.profileObj.givenName);\n      window.location = \"./#/register\";\n    }\n  };\n\n  const onLoginFailure = (res) => {\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    setIsLoggedIn(false);\n    setCurrentUser();\n  };\n\n  const handleLogout = () => {\n    setCurrentUser();\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      {isLoggedIn && (\n        <NavBar\n          clientId={clientId}\n          showlogoutButton={showlogoutButton}\n          onSignoutSuccess={onSignoutSuccess}\n          handleLogout={handleLogout}\n        />\n      )}\n      {loading ? (\n        <div className=\"loading-container w-50 text-center\">\n          <CircularProgress />\n        </div>\n      ) : (\n        <Routes>\n          <Route exact path=\"/\" element={<Navigate to=\"/login\" />} />\n          <Route\n            path=\"/login\"\n            element={\n              isLoggedIn ? (\n                <Navigate to=\"/home\" />\n              ) : (\n                <div className=\"dark-border vertical-center p-3\">\n                  {fieldsEmpty && (\n                    <Alert\n                      severity=\"error\"\n                      onClose={() => {\n                        setFieldsEmpty(false);\n                      }}\n                    >\n                      Please fill out all fields{\" \"}\n                    </Alert>\n                  )}\n                  {regSuccess && (\n                    <Alert\n                      severity=\"success\"\n                      onClose={() => {\n                        setRegSuccess(false);\n                      }}\n                    >\n                      Registration successful\n                    </Alert>\n                  )}\n                  <Login\n                    handleLogin={handleLogin}\n                    loginLoading={loginLoading}\n                    accountNotExists={accountNotExists}\n                    setAccountNotExists={setAccountNotExists}\n                    loginFail={loginFail}\n                    setLoginFail={setLoginFail}\n                    invalidEmail={invalidEmail}\n                    setInvalidEmail={setInvalidEmail}\n                    setFieldsEmpty={setFieldsEmpty}\n                    showloginButton={showloginButton}\n                    clientId={clientId}\n                    onLoginSuccess={onLoginSuccess}\n                    onLoginFailure={onLoginFailure}\n                  />\n                </div>\n              )\n            }\n          />\n          {justRegistered ? (\n            <Route path=\"/register\" element={<Navigate to=\"/\" />} />\n          ) : (\n            <Route\n              path=\"/register\"\n              element={\n                <div className=\"dark-border vertical-center p-3\">\n                  <Register\n                    handleRegister={handleRegister}\n                    regLoading={regLoading}\n                    invalidRegister={invalidRegister}\n                    setInvalidRegister={setInvalidRegister}\n                    passwordMismatch={passwordMismatch}\n                    setPasswordMismatch={setPasswordMismatch}\n                    emailExists={emailExists}\n                    setEmailExists={setEmailExists}\n                    fieldsEmpty={fieldsEmpty}\n                    setFieldsEmpty={setFieldsEmpty}\n                    nameInput={nameInput}\n                    setNameInput={setNameInput}\n                    emailInput={emailInput}\n                    setEmailInput={setEmailInput}\n                    passInput={passInput}\n                    setPassInput={setPassInput}\n                    passConfirmInput={passConfirmInput}\n                    setPassConfirmInput={setPassConfirmInput}\n                  />\n                </div>\n              }\n            />\n          )}\n\n          <Route\n            path=\"/home\"\n            element={\n              isLoggedIn ? (\n                <Home currentUser={currentUser} />\n              ) : (\n                <Navigate to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            path=\"/shop\"\n            element={\n              isLoggedIn ? (\n                <Shop\n                  currentUser={currentUser}\n                  fruits={fruits}\n                  setFruits={setFruits}\n                />\n              ) : (\n                <Navigate to=\"/login\" />\n              )\n            }\n          />\n        </Routes>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"g-signin\"></div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}