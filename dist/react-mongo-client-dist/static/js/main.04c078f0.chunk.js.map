{"version":3,"sources":["components/Login.js","components/Register.js","components/Counter.js","components/RowFruits.js","components/TransactionRow.js","components/Transaction.js","components/BillModal.js","components/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleLogin","loginLoading","loginFail","invalidEmail","accountNotExists","setAccountNotExists","setLoginFail","setInvalidEmail","useState","emailInputLogin","setEmailInputLogin","passInputLogin","setPassInputLogin","showPass","setShowPass","Box","className","Alert","severity","onClose","Input","fullWidth","placeholder","value","onChange","e","target","type","endAdornment","InputAdornment","position","onClick","IconButton","Button","variant","to","pathname","Register","handleRegister","regLoading","invalidRegister","handleInvalidRegisterClose","passwordMismatch","setPasswordMismatch","emailExists","setEmailExists","emailInput","setEmailInput","passInput","setPassInput","passConfirmInput","setPassConfirmInput","nameInput","setNameInput","Counter","handleChangeCount","fruitCount","transactionState","FormControl","TextField","InputProps","startAdornment","disabled","size","inputProps","min","label","id","parseInt","RowFruits","fruitItem","fruitPrice","handleRemove","handleCount","fruitTotal","count","setCount","ListItem","divider","secondaryAction","number","TransactionRow","item","price","totalPrice","Transaction","data","showTransaction","handleBuy","name","List","items","length","map","index","total","BillModal","handleCloseModal","userName","_id","finalBill","Shop","currentUser","fruits","setFruits","sessionFruits","selectedFruit","setSelectedFruit","cartFruits","setCartFruits","alertState","setAlertState","loading","showLoading","transactionItems","setTransactionItems","serverTransaction","setServerTransaction","url","fruitRemove","backFruit","filter","fruit","filteredFruit","itemObject","mappedFruits","a","setModalOpen","axios","post","userId","result","insertedId","get","transaction","console","log","modalOpen","Modal","open","sx","width","top","left","transform","bgcolor","boxShadow","padding","CircularProgress","InputLabel","Select","labelId","MenuItem","select","find","filterItem","handleAddFruit","key","tempTransaction","handleConfirm","App","setLoading","setRegLoading","regSuccess","setRegSuccess","justRegistered","setJustRegistered","setInvalidRegister","fieldsEmpty","setFieldsEmpty","setLoginLoading","isLoggedIn","setIsLoggedIn","setCurrentUser","getAllFruits","response","useEffect","email","pass","preventDefault","validateEmail","status","test","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04c078f0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst Login = ({\r\n  handleLogin,\r\n  loginLoading,\r\n  loginFail,\r\n  invalidEmail,\r\n  accountNotExists,\r\n  setAccountNotExists,\r\n  setLoginFail,\r\n  setInvalidEmail,\r\n}) => {\r\n  const [emailInputLogin, setEmailInputLogin] = useState(\"\");\r\n  const [passInputLogin, setPassInputLogin] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <Box className=\"\">\r\n      {accountNotExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setAccountNotExists(false);\r\n          }}\r\n        >\r\n          Account does not exist\r\n        </Alert>\r\n      )}\r\n      {loginFail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setLoginFail(false);\r\n          }}\r\n        >\r\n          Login failed\r\n        </Alert>\r\n      )}\r\n      {invalidEmail && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setInvalidEmail(false);\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      {loginLoading && <Alert severity=\"info\">Logging in...</Alert>}\r\n      <form>\r\n        <h2>Login</h2>\r\n        <label className=\"h5\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Email\"\r\n          value={emailInputLogin}\r\n          onChange={(e) => {\r\n            setEmailInputLogin(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInputLogin}\r\n          onChange={(e) => {\r\n            setPassInputLogin(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          className=\"my-3\"\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleLogin(emailInputLogin, passInputLogin, e);\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Link to={{ pathname: \"./register\" }}>\r\n          Don't have an account? Register here\r\n        </Link>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Input from \"@mui/material/Input\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Register = ({\r\n  handleRegister,\r\n  regLoading,\r\n  invalidRegister,\r\n  handleInvalidRegisterClose,\r\n  passwordMismatch,\r\n  setPasswordMismatch,\r\n  emailExists,\r\n  setEmailExists,\r\n}) => {\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passInput, setPassInput] = useState(\"\");\r\n  const [passConfirmInput, setPassConfirmInput] = useState(\"\");\r\n\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [showPass, setShowPass] = useState(false);\r\n  return (\r\n    <div className=\"\">\r\n      {passwordMismatch && (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"my-3\"\r\n          onClose={() => {\r\n            setPasswordMismatch(false);\r\n          }}\r\n        >\r\n          Passwords do not match\r\n        </Alert>\r\n      )}\r\n      {emailExists && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setEmailExists(false);\r\n          }}\r\n        >\r\n          Email already exists{\" \"}\r\n        </Alert>\r\n      )}\r\n      {regLoading && <Alert severity=\"info\"> Registering... </Alert>}\r\n      {invalidRegister && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            handleInvalidRegisterClose();\r\n          }}\r\n        >\r\n          Invalid Email Address\r\n        </Alert>\r\n      )}\r\n      <h2>Register</h2>\r\n      <form>\r\n        <label className=\"h5 d-block\">Name</label>\r\n        {/* <InputLabel>Name</InputLabel> */}\r\n        <Input\r\n          fullWidth={true}\r\n          placeholder=\"Name\"\r\n          value={nameInput}\r\n          onChange={(e) => {\r\n            setNameInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Email</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={emailInput}\r\n          onChange={(e) => {\r\n            setEmailInput(e.target.value);\r\n          }}\r\n        />\r\n        <label className=\"h5 mt-2\">Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passInput}\r\n          onChange={(e) => {\r\n            setPassInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n\r\n        <label className=\"h5 mt-2\">Confirm Password</label>\r\n        <Input\r\n          fullWidth={true}\r\n          type={showPass ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={passConfirmInput}\r\n          onChange={(e) => {\r\n            setPassConfirmInput(e.target.value);\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment\r\n              position=\"end\"\r\n              onClick={() => {\r\n                setShowPass(!showPass);\r\n              }}\r\n            >\r\n              <IconButton>\r\n                {showPass ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Button\r\n          className=\"my-3\"\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n          // sx={{ backgroundColor: \"#3f2d88\" }}\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            handleRegister(\r\n              emailInput,\r\n              passInput,\r\n              nameInput,\r\n              passConfirmInput,\r\n              e\r\n            );\r\n          }}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n\r\n      <Link to={{ pathname: \"/\" }}>Have an account? Login here</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst Counter = ({ handleChangeCount, fruitCount, transactionState }) => {\r\n  return (\r\n    <FormControl>\r\n      <TextField\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">kg</InputAdornment>,\r\n        }}\r\n        disabled={transactionState}\r\n        size=\"small\"\r\n        inputProps={{ min: 1 }}\r\n        type=\"number\"\r\n        label=\"Kilo\"\r\n        id=\"select-count\"\r\n        value={fruitCount}\r\n        onChange={(e) => {\r\n          handleChangeCount(parseInt(e.target.value, 10));\r\n        }}\r\n      ></TextField>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst RowFruits = ({\r\n  fruitItem,\r\n  fruitPrice,\r\n  handleRemove,\r\n  fruitCount,\r\n  handleCount,\r\n  fruitTotal,\r\n  transactionState,\r\n}) => {\r\n  const handleChangeCount = (number) => {\r\n    setCount(number);\r\n    handleCount(fruitItem, fruitPrice, number);\r\n  };\r\n  const [count, setCount] = useState(fruitCount);\r\n\r\n  return (\r\n    <ListItem\r\n      divider={true}\r\n      secondaryAction={\r\n        <IconButton\r\n          disabled={transactionState}\r\n          onClick={() => {\r\n            handleRemove(fruitItem);\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <Box className=\"col-3 text-center\">{fruitItem}</Box>\r\n      <Box className=\"col-3 text-center\">{fruitPrice}</Box>\r\n      <Counter\r\n        transactionState={transactionState}\r\n        count={count}\r\n        handleChangeCount={handleChangeCount}\r\n        fruitItem={fruitItem}\r\n        fruitCount={fruitCount}\r\n      />\r\n      <Box className=\"col-3 text-center\">{fruitPrice * count}</Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default RowFruits;\r\n","import React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst TransactionRow = ({ item }) => {\r\n  return (\r\n    //   TODO: use tables instead\r\n    <>\r\n      <ListItem divider={true}>\r\n        <Box className=\"col-3 text-center\">{item.item}</Box>\r\n        <Box className=\"col-3 text-center\">{item.price}</Box>\r\n        <Box className=\"col-3 text-center\">{item.count} kg</Box>\r\n        <Box className=\"col-3 text-center\">{item.totalPrice}</Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import React from \"react\";\r\n\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Transaction = ({ data, showTransaction, handleBuy }) => {\r\n  return (\r\n    <>\r\n      <h2>Transaction</h2>\r\n      User: {data.name}\r\n      {/* {data.userId} */}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong>{data.total}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"d-flex justify-content-between\">\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            showTransaction(false);\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleBuy();\r\n          }}\r\n        >\r\n          Buy\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport TransactionRow from \"./TransactionRow\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst BillModal = ({ data, handleCloseModal }) => {\r\n  return (\r\n    <Box>\r\n      <h2>Your Bill</h2>\r\n      User: {data.userName}\r\n      <br />\r\n      Transaction Id: {data._id}\r\n      <List>\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Item</Box>\r\n          <Box className=\"col-3 text-center\">Price</Box>\r\n          <Box className=\"col-3 text-center\">Kilo</Box>\r\n          <Box className=\"col-3 text-center\">Total Price</Box>\r\n        </ListItem>\r\n        {data.items.length > 0\r\n          ? data.items.map((item, index) => (\r\n              <TransactionRow key={index} item={item} />\r\n            ))\r\n          : \"\"}\r\n        <ListItem>\r\n          <Box className=\"col-3 text-center\">Final Bill</Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\"></Box>\r\n          <Box className=\"col-3 text-center\">\r\n            {/* <strong>{data.finalBill}</strong> */}\r\n            <strong>{data.finalBill}</strong>\r\n          </Box>\r\n        </ListItem>\r\n      </List>\r\n      <Box className=\"\">\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth={true}\r\n          onClick={() => {\r\n            handleCloseModal();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BillModal;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport RowFruits from \"./RowFruits\";\r\nimport Transaction from \"./Transaction\";\r\nimport BillModal from \"./BillModal\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\nconst Shop = ({ currentUser, fruits, setFruits }) => {\r\n  const [sessionFruits, setSessionFruits] = useState(fruits);\r\n\r\n  const [selectedFruit, setSelectedFruit] = useState(\"default\");\r\n\r\n  const [cartFruits, setCartFruits] = useState([]);\r\n\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [transactionState, showTransaction] = useState(false);\r\n  const [loading, showLoading] = useState(false);\r\n\r\n  const [transactionItems, setTransactionItems] = useState([]);\r\n  const [serverTransaction, setServerTransaction] = useState([]);\r\n\r\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\r\n\r\n  const handleConfirm = () => {\r\n    let total = 0;\r\n    for (var key in cartFruits) {\r\n      total += cartFruits[key].totalPrice;\r\n    }\r\n    const tempTransaction = {\r\n      name: currentUser.name,\r\n      userId: currentUser._id,\r\n      items: cartFruits,\r\n      total: total,\r\n    };\r\n    setTransactionItems(tempTransaction);\r\n    console.log(tempTransaction);\r\n\r\n    showTransaction(true);\r\n  };\r\n\r\n  const handleRemove = (fruitRemove) => {\r\n    let backFruit = sessionFruits.filter((fruit) => fruit.item === fruitRemove);\r\n    let filteredFruit = cartFruits.filter(\r\n      (fruit) => fruit.item !== fruitRemove\r\n    );\r\n    setCartFruits(filteredFruit);\r\n    const itemObject = backFruit[0];\r\n    setFruits([...fruits, itemObject]);\r\n  };\r\n  const handleRemoveAll = () => {\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n    console.log(fruits);\r\n  };\r\n  const handleAddFruit = (select) => {\r\n    const item = fruits.find((fruit) => fruit.item === select);\r\n    const filterItem = fruits.filter((fruit) => fruit.item !== select);\r\n    console.log(filterItem);\r\n    setFruits(filterItem);\r\n    setSelectedFruit(\"default\");\r\n\r\n    // //check if dupe\r\n    // // for each fruit in cart\r\n\r\n    // for (var key in cartFruits) {\r\n    //   if (select === cartFruits[key].item) {\r\n    //     setAlertState(true);\r\n    //     return; //reject action here\r\n    //   }\r\n    // }\r\n    // setAlertState(false);\r\n\r\n    const itemObject = {\r\n      item: select,\r\n      price: item.price,\r\n      count: 1,\r\n      totalPrice: item.price,\r\n    };\r\n\r\n    //only works for adding new items\r\n    setCartFruits([...cartFruits, itemObject]);\r\n  };\r\n\r\n  const handleCount = (fruitItem, fruitPrice, count) => {\r\n    const mappedFruits = cartFruits.map((fruit) =>\r\n      fruit.item === fruitItem\r\n        ? { ...fruit, count: count, totalPrice: fruitPrice * count }\r\n        : fruit\r\n    );\r\n    setCartFruits(mappedFruits);\r\n  };\r\n  const handleBuy = async () => {\r\n    setModalOpen(true);\r\n    showLoading(true);\r\n    const result = await axios.post(`${url}transactions`, {\r\n      name: transactionItems.name,\r\n      userId: transactionItems.userId,\r\n      items: transactionItems.items,\r\n      total: transactionItems.total,\r\n    });\r\n    const id = result.data.data.insertedId;\r\n    const transaction = await axios.get(`${url}transactions/${id}`);\r\n    console.log(transaction.data.data);\r\n    setServerTransaction(transaction.data.data);\r\n    showLoading(false);\r\n  };\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n    showTransaction(false);\r\n    setCartFruits([]);\r\n    setFruits(sessionFruits);\r\n  };\r\n\r\n  const modalStyle = {\r\n    position: \"absolute\",\r\n    width: \"75%\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    padding: 4,\r\n  };\r\n  return (\r\n    <>\r\n      <Modal open={modalOpen}>\r\n        <Box sx={modalStyle}>\r\n          {loading ? (\r\n            <div className=\"text-center\">\r\n              <CircularProgress />\r\n            </div>\r\n          ) : (\r\n            <BillModal\r\n              data={serverTransaction}\r\n              handleCloseModal={handleCloseModal}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n      <Button\r\n        onClick={() => {\r\n          setModalOpen(true);\r\n        }}\r\n      >\r\n        Open Modal\r\n      </Button>\r\n      {alertState ? (\r\n        <Alert\r\n          severity=\"error\"\r\n          className=\"mb-3\"\r\n          onClose={() => {\r\n            setAlertState(false);\r\n          }}\r\n        >\r\n          Fruit already added\r\n        </Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Box className=\"\">\r\n        <h2>Shop</h2>\r\n        <Box className=\"row justify-content-center\">\r\n          <Box className=\"\">Hello {currentUser.name}</Box>\r\n        </Box>\r\n        <Box className=\"row justify-content-center w-50 m-auto\">\r\n          <FormControl className=\"col-9\" size=\"small\">\r\n            <InputLabel id=\"select-label-fruits\">Fruits</InputLabel>\r\n            <Select\r\n              disabled={fruits.length === 0 || transactionState ? true : false}\r\n              labelId=\"select-label-fruits\"\r\n              id=\"select-fruits\"\r\n              value={selectedFruit}\r\n              label=\"Fruits\"\r\n              onChange={(e) => {\r\n                setSelectedFruit(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem disabled value={\"default\"}>\r\n                Select Fruit\r\n              </MenuItem>\r\n              {fruits.map((fruit, index) => (\r\n                <MenuItem key={index} value={fruit.item}>\r\n                  {fruit.item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button\r\n            disabled={\r\n              selectedFruit === \"default\" || transactionState ? true : false\r\n            }\r\n            variant=\"contained\"\r\n            className=\"col-1\"\r\n            onClick={() => {\r\n              handleAddFruit(selectedFruit);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Box className=\"row \">\r\n        <List>\r\n          <ListItem\r\n            divider={true}\r\n            secondaryAction={\r\n              cartFruits.length > 0 && (\r\n                <IconButton\r\n                  disabled={transactionState}\r\n                  onClick={() => {\r\n                    handleRemoveAll();\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          >\r\n            <Box className=\"col-3 text-center\">Item</Box>\r\n            <Box className=\"col-3 text-center\">Price</Box>\r\n            <Box className=\"col-3 text-center\">Kilo</Box>\r\n\r\n            <Box className=\"col-3 text-center\">Total</Box>\r\n          </ListItem>\r\n          {cartFruits.length > 0 ? (\r\n            cartFruits.map((fruit, index) => (\r\n              <RowFruits\r\n                transactionState={transactionState}\r\n                fruitItem={fruit.item}\r\n                fruitPrice={fruit.price}\r\n                fruitCount={fruit.count}\r\n                fruitTotal={fruit.totalPrice}\r\n                key={index}\r\n                handleRemove={handleRemove}\r\n                handleCount={handleCount}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Box className=\" text-center\">No Fruits</Box>\r\n          )}\r\n        </List>\r\n      </Box>\r\n      <Box className=\"justify-content-end d-flex\">\r\n        <Button\r\n          className=\"\"\r\n          disabled={transactionState || cartFruits.length === 0 ? true : false}\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleConfirm();\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {transactionState && (\r\n          <Transaction\r\n            handleBuy={handleBuy}\r\n            data={transactionItems}\r\n            showTransaction={showTransaction}\r\n          />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import axios from \"axios\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Shop from \"./components/Shop\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport Box from \"@mui/material/Box\";\nimport Alert from \"@mui/material/Alert\";\n\nfunction App() {\n  const url = \"https://react-mongo-lloyd.herokuapp.com/api/\";\n\n  const [fruits, setFruits] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [regLoading, setRegLoading] = useState(false);\n  const [regSuccess, setRegSuccess] = useState(false);\n  const [justRegistered, setJustRegistered] = useState(false);\n\n  const [invalidRegister, setInvalidRegister] = useState(false);\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n  const [fieldsEmpty, setFieldsEmpty] = useState(false);\n\n  const [accountNotExists, setAccountNotExists] = useState(false);\n  const [loginFail, setLoginFail] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  const getAllFruits = async () => {\n    // Till the data is fetched using API\n    // the Loading page will show.\n    setLoading(true);\n\n    // Await will make it wait until that\n    // promise settles and return its result\n\n    const response = await axios.get(`${url}items`);\n\n    setFruits(response.data.data);\n    setLoading(false);\n  };\n\n  //runs on startup\n  useEffect(() => {\n    getAllFruits();\n  }, []);\n\n  const handleRegister = async (email, pass, name, passConfirmInput, e) => {\n    e.preventDefault();\n\n    setRegLoading(false);\n    setRegSuccess(false);\n    setInvalidRegister(false);\n    setFieldsEmpty(false);\n    setPasswordMismatch(false);\n    setEmailExists(false);\n\n    //checks if fields are empty\n    if (email === \"\" || pass === \"\" || passConfirmInput === \"\" || name === \"\") {\n      console.log(\"empty\");\n      setFieldsEmpty(true);\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setInvalidRegister(true);\n      return;\n    }\n\n    if (pass !== passConfirmInput) {\n      setPasswordMismatch(true);\n      return;\n    }\n    setRegLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: email,\n    });\n\n    if (existingEmail.data[\"data\"] !== null) {\n      setEmailExists(true);\n      setRegLoading(false);\n\n      return;\n    }\n\n    const response = await axios.post(`${url}users`, {\n      name: name,\n      pass: pass,\n      email: email,\n    });\n\n    if (response.status === 200) {\n      setRegLoading(false);\n      setRegSuccess(true);\n      setJustRegistered(true);\n      setJustRegistered(false);\n    }\n  }; // end of handleRegister\n\n  const handleLogin = async (email, pass, e) => {\n    e.preventDefault();\n    setRegSuccess(false);\n\n    setFieldsEmpty(false);\n    setAccountNotExists(false);\n\n    setLoginFail(false);\n    setLoginLoading(false);\n    setInvalidEmail(false);\n\n    if (email === \"\" || pass === \"\") {\n      setFieldsEmpty(true);\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setInvalidEmail(true);\n      return;\n    }\n\n    setLoginLoading(true);\n\n    const existingEmail = await axios.post(`${url}users/validate`, {\n      email: email,\n    });\n\n    if (existingEmail.data[\"data\"] === null) {\n      setAccountNotExists(true);\n      setLoginLoading(false);\n      return;\n    }\n\n    const response = await axios.post(`${url}users/login`, {\n      email: email,\n      pass: pass,\n    });\n\n    if (response.data[\"data\"] === null) {\n      setLoginLoading(false);\n      setLoginFail(true);\n      return;\n    }\n    setCurrentUser(response.data[\"data\"]);\n    setIsLoggedIn(true);\n  }; //end of handleLogin\n\n  const validateEmail = (email) => {\n    let re =\n      /[a-zA-Z0-9!@#$%&'*+'-=]+@[a-zA-Z0-9!@#$%&'*+'-=]+\\.[a-zA-Z0-9!@#$%&'*+'-=]+/;\n    return re.test(email);\n  };\n  return (\n    <Router>\n      <Box className=\"container-sm w-50 my-2 p-3 dark-border text\">\n        {fieldsEmpty && (\n          <Alert\n            severity=\"error\"\n            onClose={() => {\n              setFieldsEmpty(false);\n            }}\n          >\n            Please fill out all fields{\" \"}\n          </Alert>\n        )}\n        {regSuccess && (\n          <Alert\n            severity=\"success\"\n            onClose={() => {\n              setRegSuccess(false);\n            }}\n          >\n            Registration successful\n          </Alert>\n        )}\n        {loading ? (\n          <div className=\"text-center\">\n            <CircularProgress />\n          </div>\n        ) : (\n          <Routes>\n            {isLoggedIn ? (\n              <Route path=\"/\" element={<Navigate to=\"/shop\" />} />\n            ) : (\n              <Route\n                path=\"/\"\n                element={\n                  <Login\n                    handleLogin={handleLogin}\n                    loginLoading={loginLoading}\n                    accountNotExists={accountNotExists}\n                    setAccountNotExists={setAccountNotExists}\n                    loginFail={loginFail}\n                    setLoginFail={setLoginFail}\n                    invalidEmail={invalidEmail}\n                    setInvalidEmail={setInvalidEmail}\n                  />\n                }\n              />\n            )}\n            {justRegistered ? (\n              <Route path=\"/register\" element={<Navigate to=\"/\" />} />\n            ) : (\n              <Route\n                path=\"/register\"\n                element={\n                  <Register\n                    handleRegister={handleRegister}\n                    regLoading={regLoading}\n                    invalidRegister={invalidRegister}\n                    passwordMismatch={passwordMismatch}\n                    setPasswordMismatch={setPasswordMismatch}\n                    emailExists={emailExists}\n                    setEmailExists={setEmailExists}\n                    fieldsEmpty={fieldsEmpty}\n                    setFieldsEmpty={setFieldsEmpty}\n                  />\n                }\n              />\n            )}\n            {isLoggedIn ? (\n              <Route\n                path=\"/shop\"\n                element={\n                  <Shop\n                    currentUser={currentUser}\n                    fruits={fruits}\n                    setFruits={setFruits}\n                  />\n                }\n              />\n            ) : (\n              <Route path=\"/shop\" element={<Navigate to=\"/\" />} />\n            )}\n          </Routes>\n        )}\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}